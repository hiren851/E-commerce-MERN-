{
    "sourceFile": "client/src/Store/shop/cart-slice/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1740554873848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740800938787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n       {\r\n         userId,\r\n         productId,\r\n         quantity,\r\n+        \r\n       }\r\n     );\r\n     return response.data;\r\n   }\r\n"
                },
                {
                    "date": 1741065932785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,64 +1,65 @@\n import axios from \"axios\";\r\n-\r\n import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n const initialState = {\r\n   cartItems: [],\r\n   isLoading: false,\r\n };\r\n \r\n+// Add to Cart\r\n export const addToCart = createAsyncThunk(\r\n   \"cart/addToCart\",\r\n   async ({ userId, productId, quantity }) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/cart/add\",\r\n-      {\r\n-        userId,\r\n-        productId,\r\n-        quantity,\r\n-        \r\n-      }\r\n+      { userId, productId, quantity }\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n \r\n+// Fetch Cart Items\r\n export const fetchcartItems = createAsyncThunk(\r\n   \"cart/fetchcartItems\",\r\n   async (userId) => {\r\n-    // console.log(cartItems)\r\n     const response = await axios.get(\r\n       `http://localhost:7000/api/shop/cart/get/${userId}`\r\n     );\r\n-\r\n     return response.data;\r\n   }\r\n );\r\n \r\n+// Delete a Cart Item\r\n export const deletecartItems = createAsyncThunk(\r\n   \"cart/deletecartItems\",\r\n   async ({ userId, productId }) => {\r\n     const response = await axios.delete(\r\n       `http://localhost:7000/api/shop/cart/${userId}/${productId}`\r\n     );\r\n-\r\n     return response.data;\r\n   }\r\n );\r\n \r\n+// Update Cart Quantity\r\n export const updateCartQuantity = createAsyncThunk(\r\n   \"cart/updateCartQuantity\",\r\n   async ({ userId, productId, quantity }) => {\r\n     const response = await axios.put(\r\n       \"http://localhost:7000/api/shop/cart/update-cart\",\r\n-      {\r\n-        userId,\r\n-        productId,\r\n-        quantity,\r\n-      }\r\n+      { userId, productId, quantity }\r\n     );\r\n+    return response.data;\r\n+  }\r\n+);\r\n \r\n+// **Clear Cart after Successful Payment**\r\n+export const clearCart = createAsyncThunk(\r\n+  \"cart/clearCart\",\r\n+  async (userId) => {\r\n+    const response = await axios.delete(\r\n+      `http://localhost:7000/api/shop/cart/clear/${userId}`\r\n+    );\r\n     return response.data;\r\n   }\r\n );\r\n \r\n@@ -74,44 +75,48 @@\n       .addCase(addToCart.fulfilled, (state, action) => {\r\n         state.isLoading = false;\r\n         state.cartItems = action.payload.data;\r\n       })\r\n-      .addCase(addToCart.rejected, (state, action) => {\r\n+      .addCase(addToCart.rejected, (state) => {\r\n         state.isLoading = false;\r\n-        state.cartItems = [];\r\n       })\r\n+\r\n       .addCase(fetchcartItems.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(fetchcartItems.fulfilled, (state, action) => {\r\n         state.isLoading = false;\r\n         state.cartItems = action.payload.data;\r\n       })\r\n-      .addCase(fetchcartItems.rejected, (state, action) => {\r\n+      .addCase(fetchcartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n-        state.cartItems = [];\r\n       })\r\n+\r\n       .addCase(updateCartQuantity.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(updateCartQuantity.fulfilled, (state, action) => {\r\n         state.isLoading = false;\r\n         state.cartItems = action.payload.data;\r\n       })\r\n-      .addCase(updateCartQuantity.rejected, (state, action) => {\r\n+      .addCase(updateCartQuantity.rejected, (state) => {\r\n         state.isLoading = false;\r\n-        state.cartItems = [];\r\n       })\r\n+\r\n       .addCase(deletecartItems.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(deletecartItems.fulfilled, (state, action) => {\r\n         state.isLoading = false;\r\n         state.cartItems = action.payload.data;\r\n       })\r\n-      .addCase(deletecartItems.rejected, (state, action) => {\r\n+      .addCase(deletecartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n-        state.cartItems = [];\r\n+      })\r\n+\r\n+      // Clear Cart after payment\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n       });\r\n   },\r\n });\r\n \r\n"
                },
                {
                    "date": 1741071449153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,15 +51,17 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-// **Clear Cart after Successful Payment**\r\n+// Clear Cart after Successful Payment\r\n export const clearCart = createAsyncThunk(\r\n   \"cart/clearCart\",\r\n   async (userId) => {\r\n+    console.log(\"Attempting to clear cart for user ID:\", userId); // Debugging log\r\n     const response = await axios.delete(\r\n       `http://localhost:7000/api/shop/cart/clear/${userId}`\r\n     );\r\n+    console.log(\"Clear cart response:\", response.data); // Debugging log\r\n     return response.data;\r\n   }\r\n );\r\n \r\n@@ -78,9 +80,8 @@\n       })\r\n       .addCase(addToCart.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n-\r\n       .addCase(fetchcartItems.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(fetchcartItems.fulfilled, (state, action) => {\r\n@@ -89,9 +90,8 @@\n       })\r\n       .addCase(fetchcartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n-\r\n       .addCase(updateCartQuantity.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(updateCartQuantity.fulfilled, (state, action) => {\r\n@@ -100,9 +100,8 @@\n       })\r\n       .addCase(updateCartQuantity.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n-\r\n       .addCase(deletecartItems.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(deletecartItems.fulfilled, (state, action) => {\r\n@@ -111,10 +110,8 @@\n       })\r\n       .addCase(deletecartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n-\r\n-      // Clear Cart after payment\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n       });\r\n   },\r\n"
                },
                {
                    "date": 1741077720628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,20 +52,10 @@\n   }\r\n );\r\n \r\n // Clear Cart after Successful Payment\r\n-export const clearCart = createAsyncThunk(\r\n-  \"cart/clearCart\",\r\n-  async (userId) => {\r\n-    console.log(\"Attempting to clear cart for user ID:\", userId); // Debugging log\r\n-    const response = await axios.delete(\r\n-      `http://localhost:7000/api/shop/cart/clear/${userId}`\r\n-    );\r\n-    console.log(\"Clear cart response:\", response.data); // Debugging log\r\n-    return response.data;\r\n-  }\r\n-);\r\n \r\n+\r\n const shoppingCartSlice = createSlice({\r\n   name: \"shoppingCart\",\r\n   initialState,\r\n   reducers: {},\r\n"
                },
                {
                    "date": 1741077771148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,11 +100,11 @@\n       })\r\n       .addCase(deletecartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      });\r\n+      // .addCase(clearCart.fulfilled, (state) => {\r\n+      //   state.cartItems = []; // Empty the cart\r\n+      // });\r\n   },\r\n });\r\n \r\n export default shoppingCartSlice.reducer;\r\n"
                },
                {
                    "date": 1741086010604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,11 @@\n // Clear Cart after Successful Payment\r\n \r\n \r\n const shoppingCartSlice = createSlice({\r\n+  clearCart: (state) => {\r\n+    state.cartItems = []; // Empty the cart\r\n+\r\n   name: \"shoppingCart\",\r\n   initialState,\r\n   reducers: {},\r\n   extraReducers: (builder) => {\r\n@@ -100,8 +103,13 @@\n       })\r\n       .addCase(deletecartItems.rejected, (state) => {\r\n         state.isLoading = false;\r\n       })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+\r\n+        state.isLoading = false;\r\n+      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741086026658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,13 @@\n // Clear Cart after Successful Payment\r\n \r\n \r\n const shoppingCartSlice = createSlice({\r\n+  reducers: {\r\n+    clearCart: (state) => {\r\n+      state.cartItems = []; // Empty the cart\r\n+    },\r\n+\r\n   clearCart: (state) => {\r\n     state.cartItems = []; // Empty the cart\r\n \r\n   name: \"shoppingCart\",\r\n@@ -108,8 +113,13 @@\n         state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+\r\n+        state.isLoading = false;\r\n+      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741086040960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,13 +55,20 @@\n // Clear Cart after Successful Payment\r\n \r\n \r\n const shoppingCartSlice = createSlice({\r\n+  name: \"shoppingCart\",\r\n+  initialState,\r\n   reducers: {\r\n     clearCart: (state) => {\r\n       state.cartItems = []; // Empty the cart\r\n     },\r\n \r\n+  reducers: {\r\n+    clearCart: (state) => {\r\n+      state.cartItems = []; // Empty the cart\r\n+    },\r\n+\r\n   clearCart: (state) => {\r\n     state.cartItems = []; // Empty the cart\r\n \r\n   name: \"shoppingCart\",\r\n@@ -118,8 +125,13 @@\n         state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+\r\n+        state.isLoading = false;\r\n+      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741086058420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,13 @@\n     state.cartItems = []; // Empty the cart\r\n \r\n   name: \"shoppingCart\",\r\n   initialState,\r\n-  reducers: {},\r\n+  reducers: {\r\n+    clearCart: (state) => {\r\n+      state.cartItems = []; // Empty the cart\r\n+    },\r\n+\r\n   extraReducers: (builder) => {\r\n     builder\r\n       .addCase(addToCart.pending, (state) => {\r\n         state.isLoading = true;\r\n@@ -130,8 +134,13 @@\n         state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+\r\n+        state.isLoading = false;\r\n+      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741086070553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,13 @@\n         state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+\r\n+        state.isLoading = false;\r\n+      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741164229094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,17 @@\n   cartItems: [],\r\n   isLoading: false,\r\n };\r\n \r\n-// Add to Cart\r\n+import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n+\r\n+// Clear Cart\r\n+export const clearCart = createAsyncThunk(\r\n+  \"cart/clearCart\",\r\n+  async () => {\r\n+    return [];\r\n+  }\r\n+\r\n export const addToCart = createAsyncThunk(\r\n   \"cart/addToCart\",\r\n   async ({ userId, productId, quantity }) => {\r\n     const response = await axios.post(\r\n@@ -57,28 +65,9 @@\n \r\n const shoppingCartSlice = createSlice({\r\n   name: \"shoppingCart\",\r\n   initialState,\r\n-  reducers: {\r\n-    clearCart: (state) => {\r\n-      state.cartItems = []; // Empty the cart\r\n-    },\r\n-\r\n-  reducers: {\r\n-    clearCart: (state) => {\r\n-      state.cartItems = []; // Empty the cart\r\n-    },\r\n-\r\n-  clearCart: (state) => {\r\n-    state.cartItems = []; // Empty the cart\r\n-\r\n-  name: \"shoppingCart\",\r\n-  initialState,\r\n-  reducers: {\r\n-    clearCart: (state) => {\r\n-      state.cartItems = []; // Empty the cart\r\n-    },\r\n-\r\n+  reducers: {},\r\n   extraReducers: (builder) => {\r\n     builder\r\n       .addCase(addToCart.pending, (state) => {\r\n         state.isLoading = true;\r\n@@ -117,35 +106,14 @@\n         state.isLoading = false;\r\n         state.cartItems = action.payload.data;\r\n       })\r\n       .addCase(deletecartItems.rejected, (state) => {\r\n-        state.isLoading = false;\r\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-\r\n-        state.isLoading = false;\r\n-      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741164246209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,16 @@\n };\r\n \r\n import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n-// Clear Cart\r\n export const clearCart = createAsyncThunk(\r\n   \"cart/clearCart\",\r\n   async () => {\r\n     return [];\r\n   }\r\n+);\r\n \r\n+\r\n export const addToCart = createAsyncThunk(\r\n   \"cart/addToCart\",\r\n   async ({ userId, productId, quantity }) => {\r\n     const response = await axios.post(\r\n@@ -59,11 +60,14 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-// Clear Cart after Successful Payment\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+      })\r\n \r\n \r\n+\r\n const shoppingCartSlice = createSlice({\r\n   name: \"shoppingCart\",\r\n   initialState,\r\n   reducers: {},\r\n"
                },
                {
                    "date": 1741164256910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,11 @@\n       .addCase(deletecartItems.rejected, (state) => {\r\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n+      })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n"
                },
                {
                    "date": 1741164278911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,11 @@\n         state.cartItems = []; // Empty the cart\r\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n+      })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n"
                },
                {
                    "date": 1741164287204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,8 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      })\r\n \r\n \r\n \r\n const shoppingCartSlice = createSlice({\r\n"
                },
                {
                    "date": 1741164302303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,11 @@\n         state.cartItems = []; // Empty the cart\r\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n+      })\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n \r\n         state.isLoading = false;\r\n       })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n"
                },
                {
                    "date": 1741164320607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,16 +114,8 @@\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n       })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-\r\n-        state.isLoading = false;\r\n-      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741164339511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,8 @@\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n       })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      })\r\n       // .addCase(clearCart.fulfilled, (state) => {\r\n       //   state.cartItems = []; // Empty the cart\r\n       // });\r\n   },\r\n"
                },
                {
                    "date": 1741164352153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,11 @@\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n       })\r\n-      // .addCase(clearCart.fulfilled, (state) => {\r\n-      //   state.cartItems = []; // Empty the cart\r\n-      // });\r\n+      .addCase(clearCart.fulfilled, (state) => {\r\n+        state.cartItems = []; // Empty the cart\r\n+      })\r\n   },\r\n });\r\n \r\n export default shoppingCartSlice.reducer;\r\n"
                },
                {
                    "date": 1741164357285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,8 @@\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n       })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      })\r\n   },\r\n });\r\n \r\n export default shoppingCartSlice.reducer;\r\n"
                },
                {
                    "date": 1741164374257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,16 @@\n   cartItems: [],\r\n   isLoading: false,\r\n };\r\n \r\n-import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n-\r\n+// Clear Cart\r\n export const clearCart = createAsyncThunk(\r\n   \"cart/clearCart\",\r\n   async () => {\r\n     return [];\r\n   }\r\n );\r\n \r\n-\r\n export const addToCart = createAsyncThunk(\r\n   \"cart/addToCart\",\r\n   async ({ userId, productId, quantity }) => {\r\n     const response = await axios.post(\r\n@@ -60,11 +58,8 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-\r\n-\r\n-\r\n const shoppingCartSlice = createSlice({\r\n   name: \"shoppingCart\",\r\n   initialState,\r\n   reducers: {},\r\n@@ -110,9 +105,9 @@\n       .addCase(deletecartItems.rejected, (state) => {\r\n       })\r\n       .addCase(clearCart.fulfilled, (state) => {\r\n         state.cartItems = []; // Empty the cart\r\n-      })\r\n+      });\r\n   },\r\n });\r\n \r\n export default shoppingCartSlice.reducer;\r\n"
                },
                {
                    "date": 1741186475601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,113 +1,113 @@\n-import axios from \"axios\";\r\n-import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n-\r\n-const initialState = {\r\n-  cartItems: [],\r\n-  isLoading: false,\r\n-};\r\n-\r\n-// Clear Cart\r\n-export const clearCart = createAsyncThunk(\r\n-  \"cart/clearCart\",\r\n-  async () => {\r\n-    return [];\r\n-  }\r\n-);\r\n-\r\n-export const addToCart = createAsyncThunk(\r\n-  \"cart/addToCart\",\r\n-  async ({ userId, productId, quantity }) => {\r\n-    const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/cart/add\",\r\n-      { userId, productId, quantity }\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-// Fetch Cart Items\r\n-export const fetchcartItems = createAsyncThunk(\r\n-  \"cart/fetchcartItems\",\r\n-  async (userId) => {\r\n-    const response = await axios.get(\r\n-      `http://localhost:7000/api/shop/cart/get/${userId}`\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-// Delete a Cart Item\r\n-export const deletecartItems = createAsyncThunk(\r\n-  \"cart/deletecartItems\",\r\n-  async ({ userId, productId }) => {\r\n-    const response = await axios.delete(\r\n-      `http://localhost:7000/api/shop/cart/${userId}/${productId}`\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-// Update Cart Quantity\r\n-export const updateCartQuantity = createAsyncThunk(\r\n-  \"cart/updateCartQuantity\",\r\n-  async ({ userId, productId, quantity }) => {\r\n-    const response = await axios.put(\r\n-      \"http://localhost:7000/api/shop/cart/update-cart\",\r\n-      { userId, productId, quantity }\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-const shoppingCartSlice = createSlice({\r\n-  name: \"shoppingCart\",\r\n-  initialState,\r\n-  reducers: {},\r\n-  extraReducers: (builder) => {\r\n-    builder\r\n-      .addCase(addToCart.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(addToCart.fulfilled, (state, action) => {\r\n-        state.isLoading = false;\r\n-        state.cartItems = action.payload.data;\r\n-      })\r\n-      .addCase(addToCart.rejected, (state) => {\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(fetchcartItems.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(fetchcartItems.fulfilled, (state, action) => {\r\n-        state.isLoading = false;\r\n-        state.cartItems = action.payload.data;\r\n-      })\r\n-      .addCase(fetchcartItems.rejected, (state) => {\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(updateCartQuantity.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(updateCartQuantity.fulfilled, (state, action) => {\r\n-        state.isLoading = false;\r\n-        state.cartItems = action.payload.data;\r\n-      })\r\n-      .addCase(updateCartQuantity.rejected, (state) => {\r\n-        state.isLoading = false;\r\n-      })\r\n-      .addCase(deletecartItems.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(deletecartItems.fulfilled, (state, action) => {\r\n-        state.isLoading = false;\r\n-        state.cartItems = action.payload.data;\r\n-      })\r\n-      .addCase(deletecartItems.rejected, (state) => {\r\n-      })\r\n-      .addCase(clearCart.fulfilled, (state) => {\r\n-        state.cartItems = []; // Empty the cart\r\n-      });\r\n-  },\r\n-});\r\n-\r\n-export default shoppingCartSlice.reducer;\r\n+import axios from \"axios\";\n+import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n+\n+const initialState = {\n+  cartItems: [],\n+  isLoading: false,\n+};\n+\n+// Clear Cart\n+export const clearCart = createAsyncThunk(\n+  \"cart/clearCart\",\n+  async () => {\n+    return [];\n+  }\n+);\n+\n+export const addToCart = createAsyncThunk(\n+  \"cart/addToCart\",\n+  async ({ userId, productId, quantity }) => {\n+    const response = await axios.post(\n+      \"http://localhost:7000/api/shop/cart/add\",\n+      { userId, productId, quantity }\n+    );\n+    return response.data;\n+  }\n+);\n+\n+// Fetch Cart Items\n+export const fetchCartItems = createAsyncThunk(\n+  \"cart/fetchcartItems\",\n+  async (userId) => {\n+    const response = await axios.get(\n+      `http://localhost:7000/api/shop/cart/get/${userId}`\n+    );\n+    return response.data;\n+  }\n+);\n+\n+// Delete a Cart Item\n+export const deletecartItems = createAsyncThunk(\n+  \"cart/deletecartItems\",\n+  async ({ userId, productId }) => {\n+    const response = await axios.delete(\n+      `http://localhost:7000/api/shop/cart/${userId}/${productId}`\n+    );\n+    return response.data;\n+  }\n+);\n+\n+// Update Cart Quantity\n+export const updateCartQuantity = createAsyncThunk(\n+  \"cart/updateCartQuantity\",\n+  async ({ userId, productId, quantity }) => {\n+    const response = await axios.put(\n+      \"http://localhost:7000/api/shop/cart/update-cart\",\n+      { userId, productId, quantity }\n+    );\n+    return response.data;\n+  }\n+);\n+\n+const shoppingCartSlice = createSlice({\n+  name: \"shoppingCart\",\n+  initialState,\n+  reducers: {},\n+  extraReducers: (builder) => {\n+    builder\n+      .addCase(addToCart.pending, (state) => {\n+        state.isLoading = true;\n+      })\n+      .addCase(addToCart.fulfilled, (state, action) => {\n+        state.isLoading = false;\n+        state.cartItems = action.payload.data;\n+      })\n+      .addCase(addToCart.rejected, (state) => {\n+        state.isLoading = false;\n+      })\n+      .addCase(fetchcartItems.pending, (state) => {\n+        state.isLoading = true;\n+      })\n+      .addCase(fetchcartItems.fulfilled, (state, action) => {\n+        state.isLoading = false;\n+        state.cartItems = action.payload.data;\n+      })\n+      .addCase(fetchcartItems.rejected, (state) => {\n+        state.isLoading = false;\n+      })\n+      .addCase(updateCartQuantity.pending, (state) => {\n+        state.isLoading = true;\n+      })\n+      .addCase(updateCartQuantity.fulfilled, (state, action) => {\n+        state.isLoading = false;\n+        state.cartItems = action.payload.data;\n+      })\n+      .addCase(updateCartQuantity.rejected, (state) => {\n+        state.isLoading = false;\n+      })\n+      .addCase(deletecartItems.pending, (state) => {\n+        state.isLoading = true;\n+      })\n+      .addCase(deletecartItems.fulfilled, (state, action) => {\n+        state.isLoading = false;\n+        state.cartItems = action.payload.data;\n+      })\n+      .addCase(deletecartItems.rejected, (state) => {\n+      })\n+      .addCase(clearCart.fulfilled, (state) => {\n+        state.cartItems = []; // Empty the cart\n+      });\n+  },\n+});\n+\n+export default shoppingCartSlice.reducer;\n"
                },
                {
                    "date": 1741186639659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n );\n \n // Fetch Cart Items\n export const fetchCartItems = createAsyncThunk(\n-  \"cart/fetchcartItems\",\n+  \"cart/fetchartItems\",\n   async (userId) => {\n     const response = await axios.get(\n       `http://localhost:7000/api/shop/cart/get/${userId}`\n     );\n"
                },
                {
                    "date": 1741186710647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n );\n \n // Fetch Cart Items\n export const fetchCartItems = createAsyncThunk(\n-  \"cart/fetchartItems\",\n+  \"cart/fetchCartItems\",\n   async (userId) => {\n     const response = await axios.get(\n       `http://localhost:7000/api/shop/cart/get/${userId}`\n     );\n@@ -77,9 +77,9 @@\n       })\n       .addCase(fetchcartItems.pending, (state) => {\n         state.isLoading = true;\n       })\n-      .addCase(fetchcartItems.fulfilled, (state, action) => {\n+      .addCase(fetchCartItems.fulfilled, (state, action) => {\n         state.isLoading = false;\n         state.cartItems = action.payload.data;\n       })\n       .addCase(fetchcartItems.rejected, (state) => {\n"
                },
                {
                    "date": 1741186719486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,16 @@\n       })\n       .addCase(addToCart.rejected, (state) => {\n         state.isLoading = false;\n       })\n-      .addCase(fetchcartItems.pending, (state) => {\n+      .addCase(fetchCartItems.pending, (state) => {\n         state.isLoading = true;\n       })\n       .addCase(fetchCartItems.fulfilled, (state, action) => {\n         state.isLoading = false;\n         state.cartItems = action.payload.data;\n       })\n-      .addCase(fetchcartItems.rejected, (state) => {\n+      .addCase(fetchCartItems.rejected, (state) => {\n         state.isLoading = false;\n       })\n       .addCase(updateCartQuantity.pending, (state) => {\n         state.isLoading = true;\n"
                },
                {
                    "date": 1741186830018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,11 @@\n   isLoading: false,\n };\n \n // Clear Cart\n-export const clearCart = createAsyncThunk(\n-  \"cart/clearCart\",\n-  async () => {\n-    return [];\n-  }\n-);\n+export const clearCart = createAsyncThunk(\"cart/clearCart\", async () => {\n+  return [];\n+});\n \n export const addToCart = createAsyncThunk(\n   \"cart/addToCart\",\n   async ({ userId, productId, quantity }) => {\n@@ -101,10 +98,9 @@\n       .addCase(deletecartItems.fulfilled, (state, action) => {\n         state.isLoading = false;\n         state.cartItems = action.payload.data;\n       })\n-      .addCase(deletecartItems.rejected, (state) => {\n-      })\n+      .addCase(deletecartItems.rejected, (state) => {})\n       .addCase(clearCart.fulfilled, (state) => {\n         state.cartItems = []; // Empty the cart\n       });\n   },\n"
                },
                {
                    "date": 1741250178926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n   initialState,\n   reducers: {},\n   extraReducers: (builder) => {\n     builder\n-      .addCase(addToCart.pending, (state) => {\n+      .addCase(addToCart.pending, (state) => { \n         state.isLoading = true;\n       })\n       .addCase(addToCart.fulfilled, (state, action) => {\n         state.isLoading = false;\n"
                },
                {
                    "date": 1741251407037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n         state.cartItems = action.payload.data;\n       })\n       .addCase(addToCart.rejected, (state) => {\n         state.isLoading = false;\n+        state.\n       })\n       .addCase(fetchCartItems.pending, (state) => {\n         state.isLoading = true;\n       })\n"
                }
            ],
            "date": 1740554873848,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\r\n\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const addToCart = createAsyncThunk(\r\n  \"cart/addToCart\",\r\n  async ({ userId, productId, quantity }) => {\r\n    const response = await axios.post(\r\n      \"http://localhost:7000/api/shop/cart/add\",\r\n      {\r\n        userId,\r\n        productId,\r\n        quantity,\r\n      }\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchcartItems = createAsyncThunk(\r\n  \"cart/fetchcartItems\",\r\n  async (userId) => {\r\n    // console.log(cartItems)\r\n    const response = await axios.get(\r\n      `http://localhost:7000/api/shop/cart/get/${userId}`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deletecartItems = createAsyncThunk(\r\n  \"cart/deletecartItems\",\r\n  async ({ userId, productId }) => {\r\n    const response = await axios.delete(\r\n      `http://localhost:7000/api/shop/cart/${userId}/${productId}`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateCartQuantity = createAsyncThunk(\r\n  \"cart/updateCartQuantity\",\r\n  async ({ userId, productId, quantity }) => {\r\n    const response = await axios.put(\r\n      \"http://localhost:7000/api/shop/cart/update-cart\",\r\n      {\r\n        userId,\r\n        productId,\r\n        quantity,\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst shoppingCartSlice = createSlice({\r\n  name: \"shoppingCart\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addToCart.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(addToCart.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = action.payload.data;\r\n      })\r\n      .addCase(addToCart.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = [];\r\n      })\r\n      .addCase(fetchcartItems.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchcartItems.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = action.payload.data;\r\n      })\r\n      .addCase(fetchcartItems.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = [];\r\n      })\r\n      .addCase(updateCartQuantity.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateCartQuantity.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = action.payload.data;\r\n      })\r\n      .addCase(updateCartQuantity.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = [];\r\n      })\r\n      .addCase(deletecartItems.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deletecartItems.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = action.payload.data;\r\n      })\r\n      .addCase(deletecartItems.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.cartItems = [];\r\n      });\r\n  },\r\n});\r\n\r\nexport default shoppingCartSlice.reducer;\r\n"
        }
    ]
}