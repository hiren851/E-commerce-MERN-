{
    "sourceFile": "client/src/Store/shop/order-slice/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 168,
            "patches": [
                {
                    "date": 1740740508066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740740515229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,3 @@\n \r\n \r\n+export \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740533013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n \r\n \r\n-export \n\\ No newline at end of file\n+export const createOrder \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740538691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n \r\n \r\n-export const createOrder \n\\ No newline at end of file\n+export const createOrder = async (req, res) => {}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740557462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n \r\n \r\n-export const createOrder = async (req, res) => {}\n\\ No newline at end of file\n+export const createOrder = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740566037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,4 @@\n+import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n\\ No newline at end of file\n-export const createOrder = \n+export const createOrder = createAsyncThunk()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740578216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n-export const createOrder = createAsyncThunk()\n\\ No newline at end of file\n+export const createOrder = createAsyncThunk('shop')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740583807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n-export const createOrder = createAsyncThunk('shop')\n\\ No newline at end of file\n+export const createOrder = createAsyncThunk('shop/create')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740740900564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n-export const createOrder = createAsyncThunk('shop/create')\n\\ No newline at end of file\n+export const createOrder = createAsyncThunk('shop/createOrder', )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741111275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n-export const createOrder = createAsyncThunk('shop/createOrder', )\n\\ No newline at end of file\n+export const createOrder = createAsyncThunk('shop/createOrder',\r\n+    \r\n+ )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741134366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n-    \r\n+    async \r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741141153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n-    async \r\n+    async (order)\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741153725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n-    async (order)\r\n+    async (orderDetails)=>{\r\n+        \r\n+    }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741179828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        \r\n+        const response = \r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741186838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = \r\n+        const response = await axi\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741195319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n+import axios from \"axios\";\r\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axi\r\n+        const response = await axios.post('')\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741204352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,9 @@\n+import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n+import axios from \"axios\";\r\n+\r\n+\r\n+export const createOrder = createAsyncThunk('shop/createOrder',\r\n+    async (orderDetails)=>{\r\n+        const response = await axios.post('http://localhost:7000/api/shop/cart/add')\r\n+    }\r\n+ )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740741213346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/cart/add')\r\n+        const response = await axios.post('http://localhost:7000/api/shop/car')\r\n     }\r\n- )\n-import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n-import axios from \"axios\";\r\n-\r\n-\r\n-export const createOrder = createAsyncThunk('shop/createOrder',\r\n-    async (orderDetails)=>{\r\n-        const response = await axios.post('')\r\n-    }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800652998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/car')\r\n+        const response = await axios.post('http://localhost:7000/api/shop/payment')\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800658670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/payment')\r\n+        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',)\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800667255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',)\r\n+        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails)\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800672935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,8 @@\n \r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails)\r\n+        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        \r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800688669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n-        \r\n+        return resolve\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800694569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n-        return resolve\r\n+        return response.data\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800708969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n import axios from \"axios\";\r\n \r\n \r\n+\r\n+\r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n-        return response.data\r\n+        return response.data;\r\n+\r\n     }\r\n  )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800714297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n import axios from \"axios\";\r\n \r\n \r\n+const initialState = {\r\n+    \r\n+}\r\n \r\n-\r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n"
                },
                {
                    "date": 1740800761066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from \"axios\";\r\n \r\n \r\n const initialState = {\r\n-    \r\n+    orders ;\r\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n"
                },
                {
                    "date": 1740800769761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n import axios from \"axios\";\r\n \r\n \r\n const initialState = {\r\n-    orders ;\r\n+    orders :[],\r\n+    isLoading\r\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n"
                },
                {
                    "date": 1740800777045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n const initialState = {\r\n     orders :[],\r\n-    isLoading\r\n+    isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n"
                },
                {
                    "date": 1740800800186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,5 +12,9 @@\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n \r\n     }\r\n- )\n\\ No newline at end of file\n+ )\r\n+ \r\n+\r\n+\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800808914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,5 @@\n  )\r\n  \r\n \r\n \r\n- \n\\ No newline at end of file\n+ const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800820232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,5 @@\n  )\r\n  \r\n \r\n \r\n- const \n\\ No newline at end of file\n+ const OrderSlice = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800826865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n+import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n import axios from \"axios\";\r\n \r\n \r\n const initialState = {\r\n@@ -16,5 +16,5 @@\n  )\r\n  \r\n \r\n \r\n- const OrderSlice = \n\\ No newline at end of file\n+ const OrderSlice = createSlice()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800836369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,7 @@\n  )\r\n  \r\n \r\n \r\n- const OrderSlice = createSlice()\n\\ No newline at end of file\n+ const OrderSlice = createSlice({\r\n+    name : ''\r\n+ })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800842473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,7 @@\n  \r\n \r\n \r\n  const OrderSlice = createSlice({\r\n-    name : ''\r\n+    name : 'order',\r\n+    \r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800856757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,7 @@\n \r\n \r\n  const OrderSlice = createSlice({\r\n     name : 'order',\r\n-    \r\n+    initialState,\r\n+    reducers : {}\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800867199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,7 @@\n \r\n  const OrderSlice = createSlice({\r\n     name : 'order',\r\n     initialState,\r\n-    reducers : {}\r\n+    reducers : {},\r\n+    extraReducers\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800873358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,6 @@\n  const OrderSlice = createSlice({\r\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n-    extraReducers\r\n+    extraReducers : (bulder)\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800879964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,8 @@\n  const OrderSlice = createSlice({\r\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n-    extraReducers : (bulder)\r\n+    extraReducers : (builder)=>{\r\n+        \r\n+    }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800888307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        \r\n+        builder.addCase()\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800894665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        builder.addCase()\r\n+        builder.addCase(create)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800901139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        builder.addCase(create)\r\n+        builder.addCase(createOrder.pending)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800910550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        builder.addCase(createOrder.pending)\r\n+        builder.addCase(createOrder.pending, (STATE)))\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800916949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        builder.addCase(createOrder.pending, (STATE)))\r\n+        builder.addCase(createOrder.pending, (state))\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800929887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,9 @@\n     name : 'order',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n-        builder.addCase(createOrder.pending, (state))\r\n+        builder.addCase(createOrder.pending, (state)=>{\r\n+            state.isLoading = true\r\n+        })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800957010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,7 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n+        \r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800964795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n-        \r\n+        .addCase(create)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800971300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n-        .addCase(create)\r\n+        .addCase(createOrder.fulfilled)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800977859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n-        .addCase(createOrder.fulfilled)\r\n+        .addCase(createOrder.fulfilled , (state,action))\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800984405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,8 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n-        .addCase(createOrder.fulfilled , (state,action))\r\n+        .addCase(createOrder.fulfilled , (state,action)=.{\r\n+                })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800991505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n-        .addCase(createOrder.fulfilled , (state,action)=.{\r\n-                })\r\n+        .addCase(createOrder.fulfilled , (state,action)=>{\r\n+            \r\n+        })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740800998318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n-            \r\n+            state\r\n         })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801006152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n-            state\r\n+            state.isLoading = false\r\n         })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801015875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n         builder.addCase(createOrder.pending, (state)=>{\r\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n-            state.isLoading = false\r\n+            state.isLoading = false,\r\n+            state.order\r\n         })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801024975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,8 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state.order\r\n+            state.orders = act\r\n         })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801030955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,8 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state.orders = act\r\n+            state.orders = action.payload.data\r\n         })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801041472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,6 +28,7 @@\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n+        .addCase()\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801047184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,7 @@\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n-        .addCase()\r\n+        .addCase(cerate)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801054045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,7 @@\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n-        .addCase(cerate)\r\n+        .addCase(createOrder)\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801064423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,7 @@\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n-        .addCase(createOrder)\r\n+        .addCase(createOrder.rejected , (state,action))\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801070050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,9 @@\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n-        .addCase(createOrder.rejected , (state,action))\r\n+        .addCase(createOrder.rejected , (state,action)=>{\r\n+            state.isLoading = false\r\n+        })\r\n     }\r\n  })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801077095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,11 @@\n             state.isLoading = false,\r\n             state.orders = action.payload.data\r\n         })\r\n         .addCase(createOrder.rejected , (state,action)=>{\r\n-            state.isLoading = false\r\n+            state.isLoading = false,\r\n+            state.orders = []\r\n         })\r\n\\ No newline at end of file\n     }\r\n- })\n+ })\r\n+\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801090788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,5 +35,5 @@\n         })\r\n     }\r\n  })\r\n \r\n- \n\\ No newline at end of file\n+ export default \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740801100912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,5 +35,5 @@\n         })\r\n     }\r\n  })\r\n \r\n- export default \n\\ No newline at end of file\n+ export default OrderSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740809813660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     orders :[],\r\n     isLoading : false,\r\n }\r\n \r\n-export const createOrder = createAsyncThunk('shop/createOrder',\r\n+export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n \r\n@@ -35,5 +35,5 @@\n         })\r\n     }\r\n  })\r\n \r\n- export default OrderSlice\n\\ No newline at end of file\n+ export default OrderSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740809870575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     orders :[],\r\n     isLoading : false,\r\n }\r\n \r\n-export const createOrder = createAsyncThunk('/shop/createOrder',\r\n+export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n \r\n"
                },
                {
                    "date": 1740809877166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n-    async (orderDetails)=>{\r\n+    async ({orderDetails})=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n \r\n     }\r\n"
                },
                {
                    "date": 1740809908085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async ({orderDetails})=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        const res = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response.data;\r\n \r\n     }\r\n  )\r\n"
                },
                {
                    "date": 1740809914278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async ({orderDetails})=>{\r\n-        const res = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n-        return response.data;\r\n+        const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        return result.data;\r\n \r\n     }\r\n  )\r\n  \r\n"
                },
                {
                    "date": 1740810035908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n     async ({orderDetails})=>{\r\n         const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n-        return result.data;\r\n+        return result?.data;\r\n \r\n     }\r\n  )\r\n  \r\n@@ -26,9 +26,9 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state.orders = action.payload.data\r\n+            state.orders = action.payload\r\n         })\r\n         .addCase(createOrder.rejected , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = []\r\n"
                },
                {
                    "date": 1740810402965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from \"axios\";\r\n \r\n \r\n const initialState = {\r\n-    orders :[],\r\n+    orders :null,\r\n     isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('shop/createOrder',\r\n"
                },
                {
                    "date": 1740810467361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n  \r\n \r\n \r\n  const OrderSlice = createSlice({\r\n-    name : 'order',\r\n+    name : 'orderSlice',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n"
                },
                {
                    "date": 1740810566071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     orders :null,\r\n     isLoading : false,\r\n }\r\n \r\n-export const createOrder = createAsyncThunk('shop/createOrder',\r\n+export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async ({orderDetails})=>{\r\n         const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return result?.data;\r\n \r\n@@ -17,9 +17,9 @@\n  \r\n \r\n \r\n  const OrderSlice = createSlice({\r\n-    name : 'orderSlice',\r\n+    name : 'OrderSlice',\r\n     initialState,\r\n     reducers : {},\r\n     extraReducers : (builder)=>{\r\n         builder.addCase(createOrder.pending, (state)=>{\r\n"
                },
                {
                    "date": 1740810585243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n-    async ({orderDetails})=>{\r\n+    async ({orderDetails)=>{\r\n         const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return result?.data;\r\n \r\n     }\r\n"
                },
                {
                    "date": 1740810590669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n-    async ({orderDetails)=>{\r\n+    async (orderDetails)=>{\r\n         const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return result?.data;\r\n \r\n     }\r\n"
                },
                {
                    "date": 1740810605162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const result = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        const res = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return result?.data;\r\n \r\n     }\r\n  )\r\n"
                },
                {
                    "date": 1740810656951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const res = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        const response = await axios.post('http://localhost:7000/api/shop/orderpayment-checkout',orderDetails);\r\n         return result?.data;\r\n \r\n     }\r\n  )\r\n"
                },
                {
                    "date": 1740810685667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/orderpayment-checkout',orderDetails);\r\n-        return result?.data;\r\n+        const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n+        return r.data;\r\n \r\n     }\r\n  )\r\n  \r\n"
                },
                {
                    "date": 1740810692947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n-        return r.data;\r\n+        return response .data;\r\n \r\n     }\r\n  )\r\n  \r\n"
                },
                {
                    "date": 1740810951118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n+        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n         return response .data;\r\n \r\n     }\r\n  )\r\n"
                },
                {
                    "date": 1740811171088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/payment-checkout',orderDetails);\r\n+        const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n         return response .data;\r\n \r\n     }\r\n  )\r\n"
                },
                {
                    "date": 1740821685154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from \"axios\";\r\n \r\n \r\n const initialState = {\r\n-    orders :null,\r\n+    orderDetails :null,\r\n     isLoading : false,\r\n }\r\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n"
                },
                {
                    "date": 1740821855533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n export const createOrder = createAsyncThunk('/shop/createOrder',\r\n     async (orderDetails)=>{\r\n         const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n-        return response .data;\r\n+        return response.data;\r\n \r\n     }\r\n  )\r\n  \r\n"
                },
                {
                    "date": 1740821870893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state.orders = action.payload\r\n+            state.ordersDe = action.payload\r\n         })\r\n         .addCase(createOrder.rejected , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = []\r\n"
                },
                {
                    "date": 1740821878072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state.ordersDe = action.payload\r\n+            state. = action.payload\r\n         })\r\n         .addCase(createOrder.rejected , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = []\r\n"
                },
                {
                    "date": 1740821889187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             state.isLoading = true\r\n         })\r\n         .addCase(createOrder.fulfilled , (state,action)=>{\r\n             state.isLoading = false,\r\n-            state. = action.payload\r\n+            state.orderDetails = action.payload\r\n         })\r\n         .addCase(createOrder.rejected , (state,action)=>{\r\n             state.isLoading = false,\r\n             state.orders = []\r\n"
                },
                {
                    "date": 1740822897841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,38 @@\n import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n import axios from \"axios\";\r\n \r\n-\r\n const initialState = {\r\n-    orderDetails :null,\r\n-    isLoading : false,\r\n-}\r\n+  orderDetails: null,\r\n+  isLoading: false,\r\n+};\r\n \r\n-export const createOrder = createAsyncThunk('/shop/createOrder',\r\n-    async (orderDetails)=>{\r\n-        const response = await axios.post('http://localhost:7000/api/shop/order/payment-checkout',orderDetails);\r\n-        return response.data;\r\n+export const createOrder = createAsyncThunk(\r\n+  \"/shop/createOrder\",\r\n+  async (orderDetails) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n+      orderDetails\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n \r\n-    }\r\n- )\r\n- \r\n+const OrderSlice = createSlice({\r\n+  name: \"OrderSlice\",\r\n+  initialState,\r\n+  reducers: {},\r\n+  extraReducers: (builder) => {\r\n+    builder\r\n+      .addCase(createOrder.pending, (state) => {\r\n+        state.isLoading = true;\r\n+      })\r\n\\ No newline at end of file\n+      .addCase(createOrder.fulfilled, (state, action) => {\r\n+        (state.isLoading = false), (state.orderDetails = action.payload);\r\n+      })\r\n+      .addCase(createOrder.rejected, (state, action) => {\r\n+        (state.isLoading = false), (state.orderDetails = []);\r\n+      });\r\n+  },\r\n+});\r\n \r\n-\r\n- const OrderSlice = createSlice({\r\n-    name : 'OrderSlice',\r\n-    initialState,\r\n-    reducers : {},\r\n-    extraReducers : (builder)=>{\r\n-        builder.addCase(createOrder.pending, (state)=>{\r\n-            state.isLoading = true\r\n-        })\r\n-        .addCase(createOrder.fulfilled , (state,action)=>{\r\n-            state.isLoading = false,\r\n-            state.orderDetails = action.payload\r\n-        })\r\n-        .addCase(createOrder.rejected , (state,action)=>{\r\n-            state.isLoading = false,\r\n-            state.orders = []\r\n-        })\r\n-    }\r\n- })\r\n-\r\n- export default OrderSlice.reducer\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1740822988200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,13 @@\n       .addCase(createOrder.pending, (state) => {\r\n         state.isLoading = true;\r\n       })\r\n       .addCase(createOrder.fulfilled, (state, action) => {\r\n-        (state.isLoading = false), (state.orderDetails = action.payload);\r\n+        (state.isLoading = false) (state.orderDetails = action.payload);\r\n       })\r\n       .addCase(createOrder.rejected, (state, action) => {\r\n         (state.isLoading = false), (state.orderDetails = []);\r\n       });\r\n   },\r\n });\r\n \r\n\\ No newline at end of file\n-export default OrderSlice.reducer;\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1740823144071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n       .addCase(createOrder.fulfilled, (state, action) => {\r\n         (state.isLoading = false) (state.orderDetails = action.payload);\r\n       })\r\n       .addCase(createOrder.rejected, (state, action) => {\r\n-        (state.isLoading = false), (state.orderDetails = []);\r\n+        (state.isLoading = false) (state.orderDetails = []);\r\n       });\r\n   },\r\n });\r\n \r\n\\ No newline at end of file\n-export default OrderSlice.reducer;\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1740823341688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,17 +22,20 @@\n   initialState,\r\n   reducers: {},\r\n   extraReducers: (builder) => {\r\n     builder\r\n-      .addCase(createOrder.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(createOrder.fulfilled, (state, action) => {\r\n-        (state.isLoading = false) (state.orderDetails = action.payload);\r\n-      })\r\n-      .addCase(createOrder.rejected, (state, action) => {\r\n-        (state.isLoading = false) (state.orderDetails = []);\r\n-      });\r\n+    .addCase(createOrder.pending, (state) => {\r\n+      state.isLoading = true;\r\n+    })\r\n+    .addCase(createOrder.fulfilled, (state, action) => {\r\n\\ No newline at end of file\n+      state.isLoading = false;\r\n+      state.orderDetails = action.payload;\r\n+    })\r\n+    .addCase(createOrder.rejected, (state) => {\r\n+      state.isLoading = false;\r\n+      state.orderDetails = []; // You may also want to store `action.error.message` for debugging\r\n+    });\r\n+  \r\n   },\r\n });\r\n \r\n-export default OrderSlice.reducer;\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1740823369413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,11 +31,11 @@\n       state.orderDetails = action.payload;\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n-      state.orderDetails = []; // You may also want to store `action.error.message` for debugging\r\n+      state.orderDetails = []; \r\n     });\r\n   \r\n   },\r\n });\r\n \r\n\\ No newline at end of file\n-export default OrderSlice.reducer;\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1741000798294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import axios from \"axios\";\r\n \r\n const initialState = {\r\n   orderDetails: null,\r\n+  \r\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n@@ -37,5 +38,5 @@\n   \r\n   },\r\n });\r\n \r\n-export default OrderSlice.reducer;\n\\ No newline at end of file\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1741000811518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from \"axios\";\r\n \r\n const initialState = {\r\n   orderDetails: null,\r\n-  \r\n+  url : null,\r\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n"
                },
                {
                    "date": 1741000895583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n+      state.url : null\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741000901651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n-      state.url : null\r\n+      state.url = null;\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741000910373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n     })\r\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n+      state.\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741000915787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     })\r\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n-      state.\r\n+      state.url = \r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741000923927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     })\r\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n-      state.url = \r\n+      state.url = action.payload.url\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741000955550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     })\r\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n-      state.url = action.payload.url\r\n+      state.url = action.payload.url \r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005746234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import axios from \"axios\";\r\n \r\n const initialState = {\r\n   orderDetails: null,\r\n+  orderId : null,\r\n   url : null,\r\n   isLoading: false,\r\n };\r\n \r\n"
                },
                {
                    "date": 1741005751776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n     })\r\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n-      state.url = action.payload.url \r\n+      state.url = action.payload.url ,\r\n+      \r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005774091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n     .addCase(createOrder.fulfilled, (state, action) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n-      \r\n+      state.orderId = action.payload.orderId,\r\n+      sessionStorage.setItem()\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005779745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n-      sessionStorage.setItem()\r\n+      sessionStorage.setItem(\"\")\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005785585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n-      sessionStorage.setItem(\"\")\r\n+      sessionStorage.setItem(\"currentOrderId\")\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005791608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,11 @@\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n-      sessionStorage.setItem(\"currentOrderId\")\r\n+      sessionStorage.setItem(\"currentOrderId\",\r\n+        js\r\n+      )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n"
                },
                {
                    "date": 1741005797690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n       sessionStorage.setItem(\"currentOrderId\",\r\n-        js\r\n+        json.s\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n"
                },
                {
                    "date": 1741005804765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n       sessionStorage.setItem(\"currentOrderId\",\r\n-        json.s\r\n+        JSON.stringu\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n"
                },
                {
                    "date": 1741005811171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n       sessionStorage.setItem(\"currentOrderId\",\r\n-        JSON.stringu\r\n+        JSON.string\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n"
                },
                {
                    "date": 1741005820147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n       sessionStorage.setItem(\"currentOrderId\",\r\n-        JSON.string\r\n+        JSON.stringify(action.)\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n"
                },
                {
                    "date": 1741005825820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n       sessionStorage.setItem(\"currentOrderId\",\r\n-        JSON.stringify(action.)\r\n+        JSON.stringify(action.payload.orderId)\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n"
                },
                {
                    "date": 1741005853931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n       state.url = null;\r\n+      state.\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741005861162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n       state.url = null;\r\n-      state.\r\n+      state.orderId : null\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741006516816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,10 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n+\r\n+\r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n   reducers: {},\r\n@@ -40,9 +42,9 @@\n     .addCase(createOrder.rejected, (state) => {\r\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n       state.url = null;\r\n-      state.orderId : null\r\n+      state.orderId = null\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741006525612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n+export const capturePayment\r\n \r\n-\r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n   reducers: {},\r\n"
                },
                {
                    "date": 1741006555205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-export const capturePayment\r\n+export const capturePayment \r\n \r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n"
                },
                {
                    "date": 1741006563807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-export const capturePayment \r\n+export const capturePayment = createAsyncThunk(\"\")\r\n \r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n"
                },
                {
                    "date": 1741063743946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,19 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n+export const createOrder = createAsyncThunk(\r\n+  \"/shop/createOrder\",\r\n+  async (orderDetails) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n+      orderDetails\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n+\r\n export const capturePayment = createAsyncThunk(\"\")\r\n \r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n"
                },
                {
                    "date": 1741063755135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-export const createOrder = createAsyncThunk(\r\n+export const capture = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n   async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n"
                },
                {
                    "date": 1741063765181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-export const capture = createAsyncThunk(\r\n+export const capturePayment = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n   async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n@@ -29,10 +29,10 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-export const capturePayment = createAsyncThunk(\"\")\r\n \r\n+\r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n   reducers: {},\r\n"
                },
                {
                    "date": 1741063822735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n-  async (orderDetails) => {\r\n+  async (orderDeta{ils) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n     );\r\n"
                },
                {
                    "date": 1741063829504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n-  async (orderDeta{ils) => {\r\n+  async ({paymentId , payerId , orderId}) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n     );\r\n"
                },
                {
                    "date": 1741063843161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,11 @@\n   \"/shop/createOrder\",\r\n   async ({paymentId , payerId , orderId}) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n-      orderDetails\r\n+      {\r\n+        paymentId , payerId , orderId\r\n+      }\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n"
                },
                {
                    "date": 1741064298575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n-  async ({paymentId , payerId , orderId}) => {\r\n+  async ( orderId}) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       {\r\n         paymentId , payerId , orderId\r\n"
                },
                {
                    "date": 1741064303948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,13 @@\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"/shop/createOrder\",\r\n-  async ( orderId}) => {\r\n+  async ( orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       {\r\n-        paymentId , payerId , orderId\r\n+         orderId\r\n       }\r\n     );\r\n     return response.data;\r\n   }\r\n"
                },
                {
                    "date": 1741065900719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,22 +19,21 @@\n   }\r\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n-  \"/shop/createOrder\",\r\n-  async ( orderId) => {\r\n+  \"/shop/capturePayment\",\r\n+  async (orderId) => {\r\n     const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n-      {\r\n-         orderId\r\n-      }\r\n+      \"http://localhost:7000/api/shop/order/capture-payment\",\r\n+      { orderId }\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n \r\n \r\n \r\n+\r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n   reducers: {},\r\n"
                },
                {
                    "date": 1741066343252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,19 @@\n   }\r\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n-  \"/shop/capturePayment\",\r\n-  async (orderId) => {\r\n+  \"order/capturePayment\",\r\n+  async ({ orderId, paymentId, payerId }) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture-payment\",\r\n-      { orderId }\r\n+      {\r\n+        orderId,\r\n+        paymentId,\r\n+        payerId,\r\n+        orderStatus: \"confirmed\", // Updating order status\r\n+        paymentStatus: \"completed\", // Updating payment status\r\n+      }\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n"
                },
                {
                    "date": 1741066370796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,10 @@\n       state.isLoading = false;\r\n       state.orderDetails = []; \r\n       state.url = null;\r\n       state.orderId = null\r\n+    }).addCase(capturePayment.fulfilled, (state, action) => {\r\n+      state.orderDetails = action.payload;\r\n     });\r\n   \r\n   },\r\n });\r\n"
                },
                {
                    "date": 1741069756236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,11 @@\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n-      sessionStorage.setItem(\"currentOrderId\",\r\n+    sessionStorage.setItem(\"currentOrderId\", \r\n+    sessionStorage.setItem(\"currentCartId\", \r\n+\r\n         JSON.stringify(action.payload.orderId)\r\n       )\r\n     })\r\n     .addCase(createOrder.rejected, (state) => {\r\n"
                },
                {
                    "date": 1741069775272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,8 @@\n       state.isLoading = false;\r\n       state.orderDetails = action.payload;\r\n       state.url = action.payload.url ,\r\n       state.orderId = action.payload.orderId,\r\n-    sessionStorage.setItem(\"currentOrderId\", \r\n     sessionStorage.setItem(\"currentCartId\", \r\n \r\n         JSON.stringify(action.payload.orderId)\r\n       )\r\n"
                },
                {
                    "date": 1741069802587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n import axios from \"axios\";\r\n \r\n const initialState = {\r\n   orderDetails: null,\r\n-  orderId : null,\r\n-  url : null,\r\n+  orderId: null,\r\n+  url: null,\r\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n@@ -35,39 +35,36 @@\n     return response.data;\r\n   }\r\n );\r\n \r\n-\r\n-\r\n-\r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n   reducers: {},\r\n   extraReducers: (builder) => {\r\n     builder\r\n-    .addCase(createOrder.pending, (state) => {\r\n-      state.isLoading = true;\r\n-    })\r\n-    .addCase(createOrder.fulfilled, (state, action) => {\r\n-      state.isLoading = false;\r\n-      state.orderDetails = action.payload;\r\n-      state.url = action.payload.url ,\r\n-      state.orderId = action.payload.orderId,\r\n-    sessionStorage.setItem(\"currentCartId\", \r\n+      .addCase(createOrder.pending, (state) => {\r\n+        state.isLoading = true;\r\n+      })\r\n+      .addCase(createOrder.fulfilled, (state, action) => {\r\n+        state.isLoading = false;\r\n+        state.orderDetails = action.payload;\r\n+        state.url = action.payload.url;\r\n+        state.orderId = action.payload.orderId;\r\n \r\n-        JSON.stringify(action.payload.orderId)\r\n-      )\r\n-    })\r\n-    .addCase(createOrder.rejected, (state) => {\r\n-      state.isLoading = false;\r\n-      state.orderDetails = []; \r\n-      state.url = null;\r\n-      state.orderId = null\r\n-    }).addCase(capturePayment.fulfilled, (state, action) => {\r\n-      state.orderDetails = action.payload;\r\n-    });\r\n-  \r\n+        // Set currentOrderId and currentCartId in session storage\r\n+        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n+        sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n+      })\r\n+      .addCase(createOrder.rejected, (state) => {\r\n+        state.isLoading = false;\r\n+        state.orderDetails = [];\r\n+        state.url = null;\r\n+        state.orderId = null;\r\n+      })\r\n+      .addCase(capturePayment.fulfilled, (state, action) => {\r\n+        state.orderDetails = action.payload;\r\n+      });\r\n   },\r\n });\r\n \r\n export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1741078423521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n-  \"/shop/createOrder\",\r\n+  \"/order/createOrder\",\r\n   async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n"
                },
                {
                    "date": 1741079453036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n         state.url = action.payload.url;\r\n         state.orderId = action.payload.orderId;\r\n \r\n         // Set currentOrderId and currentCartId in session storage\r\n-        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n-        sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n+        // sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n+        // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n       })\r\n       .addCase(createOrder.rejected, (state) => {\r\n         state.isLoading = false;\r\n         state.orderDetails = [];\r\n"
                },
                {
                    "date": 1741079896855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n-  \"/order/createOrder\",\r\n+  \"/shop/createOrder\",\r\n   async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n"
                },
                {
                    "date": 1741080012396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n-  \"/shop/createOrder\",\r\n+  \"//createOrder\",\r\n   async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n"
                },
                {
                    "date": 1741080606075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"//createOrder\",\r\n-  async (orderDetails) => {\r\n+  async ({orderDetails}) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n     );\r\n"
                },
                {
                    "date": 1741080664735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   isLoading: false,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n-  \"//createOrder\",\r\n+  \"/order/createOrder\",\r\n   async ({orderDetails}) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n"
                },
                {
                    "date": 1741082157100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n-  async ({orderDetails}) => {\r\n+  async ({orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n     );\r\n"
                },
                {
                    "date": 1741082191224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n-  async ({orderDetails) => {\r\n+  async (orderDetails) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n       orderDetails\r\n     );\r\n"
                },
                {
                    "date": 1741082407008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,19 +6,109 @@\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n };\r\n+const createOrder = async (req, res) => {\r\n+  try {\r\n+    console.log(\"Received order request:\", req.body); // ✅ Log request data for debugging\r\n \r\n-export const createOrder = createAsyncThunk(\r\n-  \"/order/createOrder\",\r\n-  async (orderDetails) => {\r\n-    const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n-      orderDetails\r\n-    );\r\n-    return response.data;\r\n+    const {\r\n+      userId,\r\n+      orderId, // Make sure this exists\r\n+      cartId,\r\n+      cartItems,\r\n+      addressInfo,\r\n+      orderStatus = \"pending\",\r\n+      paymentMethod = \"Stripe\",\r\n+      paymentStatus = \"pending\",\r\n+      totalAmount,\r\n+      orderDate = new Date(),\r\n+      orderUpdateDate = new Date(),\r\n+      paymentId = \"\",\r\n+      payerId = \"\",\r\n+      userEmail,\r\n+    } = req.body;\r\n+\r\n+    // 🛑 Validate Required Data\r\n+    if (!cartItems || !Array.isArray(cartItems) || cartItems.length === 0) {\r\n+      return res.status(400).json({\r\n+        success: false,\r\n+        message: \"Invalid data! Cart items are required.\",\r\n+      });\r\n+    }\r\n+\r\n+    console.log(\"Cart Items:\", cartItems); // ✅ Log cart items\r\n+\r\n+    // ✅ Prepare Stripe Payment Data\r\n+    const lineItems = cartItems.map((cartItems) => ({\r\n+      price_data: {\r\n+        currency: \"inr\",\r\n+        product_data: {\r\n+          name: cartItems.title,\r\n+        },\r\n+        unit_amount: Math.round(cartItems.price * 100), // Convert price to smallest currency unit\r\n+      },\r\n+      quantity: cartItems.quantity,\r\n+    }));\r\n+\r\n+    // ✅ Create Stripe Checkout Session\r\n+    let session;\r\n+    try {\r\n+      session = await Stripe.checkout.sessions.create({\r\n+        payment_method_types: [\"card\"],\r\n+        line_items: lineItems,\r\n+        mode: \"payment\",\r\n+        success_url: \"http://localhost:5173/shop/success\",\r\n+        cancel_url: \"http://localhost:5173/shop/cancel\",\r\n+        customer_email: userEmail,\r\n+        metadata: { userId, orderId: orderId || \"temp_order_id\" }, // Ensure orderId exists\r\n+      });\r\n+    } catch (stripeError) {\r\n+      console.error(\"Stripe Error:\", stripeError);\r\n+      return res.status(502).json({\r\n+        success: false,\r\n+        message: \"Stripe session creation failed!\",\r\n+        error: stripeError.message,\r\n+      });\r\n+    }\r\n+\r\n+    // ✅ Create and Save Order in Database\r\n+    const newOrder = new Order({\r\n+      userId,\r\n+      orderId: orderId || new Date().getTime(), // Generate orderId if not provided\r\n+      cartId,\r\n+      cartItems,\r\n+      addressInfo,\r\n+      totalAmount,\r\n+      orderStatus,\r\n+      paymentMethod,\r\n+      paymentStatus,\r\n+      orderDate,\r\n+      orderUpdateDate,\r\n+      paymentId,\r\n+      payerId,\r\n+    });\r\n+\r\n+    await newOrder.save();\r\n+\r\n+    // ✅ Send Response with Stripe Payment URL\r\n+    res.status(201).json({\r\n+      success: true,\r\n+      message: \"Order Created successfully\",\r\n+      orderId: newOrder._id,\r\n+      data: newOrder,\r\n+      sessionId: session.id,\r\n+      url: session.url,\r\n+    });\r\n+  } catch (error) {\r\n+    console.error(\"Server Error:\", error);\r\n+    res.status(500).json({\r\n+      success: false,\r\n+      message: \"Internal Server Error\",\r\n+      error: error.message,\r\n+    });\r\n   }\r\n-);\r\n+};\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"order/capturePayment\",\r\n   async ({ orderId, paymentId, payerId }) => {\r\n"
                },
                {
                    "date": 1741082446940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,109 +6,19 @@\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n };\r\n-const createOrder = async (req, res) => {\r\n-  try {\r\n-    console.log(\"Received order request:\", req.body); // ✅ Log request data for debugging\r\n \r\n-    const {\r\n-      userId,\r\n-      orderId, // Make sure this exists\r\n-      cartId,\r\n-      cartItems,\r\n-      addressInfo,\r\n-      orderStatus = \"pending\",\r\n-      paymentMethod = \"Stripe\",\r\n-      paymentStatus = \"pending\",\r\n-      totalAmount,\r\n-      orderDate = new Date(),\r\n-      orderUpdateDate = new Date(),\r\n-      paymentId = \"\",\r\n-      payerId = \"\",\r\n-      userEmail,\r\n-    } = req.body;\r\n-\r\n-    // 🛑 Validate Required Data\r\n-    if (!cartItems || !Array.isArray(cartItems) || cartItems.length === 0) {\r\n-      return res.status(400).json({\r\n-        success: false,\r\n-        message: \"Invalid data! Cart items are required.\",\r\n-      });\r\n-    }\r\n-\r\n-    console.log(\"Cart Items:\", cartItems); // ✅ Log cart items\r\n-\r\n-    // ✅ Prepare Stripe Payment Data\r\n-    const lineItems = cartItems.map((cartItems) => ({\r\n-      price_data: {\r\n-        currency: \"inr\",\r\n-        product_data: {\r\n-          name: cartItems.title,\r\n-        },\r\n-        unit_amount: Math.round(cartItems.price * 100), // Convert price to smallest currency unit\r\n-      },\r\n-      quantity: cartItems.quantity,\r\n-    }));\r\n-\r\n-    // ✅ Create Stripe Checkout Session\r\n-    let session;\r\n-    try {\r\n-      session = await Stripe.checkout.sessions.create({\r\n-        payment_method_types: [\"card\"],\r\n-        line_items: lineItems,\r\n-        mode: \"payment\",\r\n-        success_url: \"http://localhost:5173/shop/success\",\r\n-        cancel_url: \"http://localhost:5173/shop/cancel\",\r\n-        customer_email: userEmail,\r\n-        metadata: { userId, orderId: orderId || \"temp_order_id\" }, // Ensure orderId exists\r\n-      });\r\n-    } catch (stripeError) {\r\n-      console.error(\"Stripe Error:\", stripeError);\r\n-      return res.status(502).json({\r\n-        success: false,\r\n-        message: \"Stripe session creation failed!\",\r\n-        error: stripeError.message,\r\n-      });\r\n-    }\r\n-\r\n-    // ✅ Create and Save Order in Database\r\n-    const newOrder = new Order({\r\n-      userId,\r\n-      orderId: orderId || new Date().getTime(), // Generate orderId if not provided\r\n-      cartId,\r\n-      cartItems,\r\n-      addressInfo,\r\n-      totalAmount,\r\n-      orderStatus,\r\n-      paymentMethod,\r\n-      paymentStatus,\r\n-      orderDate,\r\n-      orderUpdateDate,\r\n-      paymentId,\r\n-      payerId,\r\n-    });\r\n-\r\n-    await newOrder.save();\r\n-\r\n-    // ✅ Send Response with Stripe Payment URL\r\n-    res.status(201).json({\r\n-      success: true,\r\n-      message: \"Order Created successfully\",\r\n-      orderId: newOrder._id,\r\n-      data: newOrder,\r\n-      sessionId: session.id,\r\n-      url: session.url,\r\n-    });\r\n-  } catch (error) {\r\n-    console.error(\"Server Error:\", error);\r\n-    res.status(500).json({\r\n-      success: false,\r\n-      message: \"Internal Server Error\",\r\n-      error: error.message,\r\n-    });\r\n+export const createOrder = createAsyncThunk(\r\n+  \"/order/createOrder\",\r\n+  async (orderDetails) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n+      orderDetails\r\n+    );\r\n+    return response.data;\r\n   }\r\n-};\r\n+);\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"order/capturePayment\",\r\n   async ({ orderId, paymentId, payerId }) => {\r\n"
                },
                {
                    "date": 1741083538454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,10 @@\n         state.orderDetails = action.payload;\r\n         state.url = action.payload.url;\r\n         state.orderId = action.payload.orderId;\r\n \r\n+        // sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n         // Set currentOrderId and currentCartId in session storage\r\n-        // sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n         // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n       })\r\n       .addCase(createOrder.rejected, (state) => {\r\n         state.isLoading = false;\r\n"
                },
                {
                    "date": 1741083544041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,10 +49,10 @@\n         state.isLoading = false;\r\n         state.orderDetails = action.payload;\r\n         state.url = action.payload.url;\r\n         state.orderId = action.payload.orderId;\r\n+        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n \r\n-        // sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n         // Set currentOrderId and currentCartId in session storage\r\n         // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n       })\r\n       .addCase(createOrder.rejected, (state) => {\r\n"
                },
                {
                    "date": 1741083748239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   }\r\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n-  \"order/capturePayment\",\r\n+  \"/order/capturePayment\",\r\n   async ({ orderId, paymentId, payerId }) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture-payment\",\r\n       {\r\n"
                },
                {
                    "date": 1741083760979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,8 @@\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture-payment\",\r\n       {\r\n         orderId,\r\n-        paymentId,\r\n-        payerId,\r\n         orderStatus: \"confirmed\", // Updating order status\r\n         paymentStatus: \"completed\", // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741083766173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n );\r\n \r\n export const capturePayment = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n-  async ({ orderId, paymentId, payerId }) => {\r\n+  async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture-payment\",\r\n       {\r\n         orderId,\r\n"
                },
                {
                    "date": 1741083794788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,9 @@\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture-payment\",\r\n       {\r\n-        orderId,\r\n-        orderStatus: \"confirmed\", // Updating order status\r\n-        paymentStatus: \"completed\", // Updating payment status\r\n+        orderId, // Updating payment status\r\n       }\r\n     );\r\n     return response.data;\r\n   }\r\n"
                },
                {
                    "date": 1741084346761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n export const capturePayment = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/capture-payment\",\r\n+      \"http://localhost:7000/api/shop/order/capture\",\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741085171558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n+import axios from \"axios\";\r\n+\r\n+const initialState = {\r\n+  orderDetails: null,\r\n+  orderId: null,\r\n+  url: null,\r\n+  isLoading: false,\r\n+};\r\n+\r\n+export const createOrder = createAsyncThunk(\r\n+  \"/order/createOrder\",\r\n+  async (orderDetails) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n+      orderDetails\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n+\r\n+export const capturePayment = createAsyncThunk(\r\n+  \"/order/capturePayment\",\r\n+  async (orderId) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/capture\",\r\n+      {\r\n+        orderId, // Updating payment status\r\n+      }\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n+\r\n+const OrderSlice = createSlice({\r\n+  name: \"OrderSlice\",\r\n+  initialState,\r\n+  reducers: {},\r\n+  extraReducers: (builder) => {\r\n+    builder\r\n+      .addCase(createOrder.pending, (state) => {\r\n+        state.isLoading = true;\r\n+      })\r\n+      .addCase(createOrder.fulfilled, (state, action) => {\r\n+        state.isLoading = false;\r\n+        state.orderDetails = action.payload;\r\n+        state.url = action.payload.url;\r\n+        state.orderId = action.payload.orderId;\r\n+        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n+        sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n+\r\n+\r\n+        // Set currentOrderId and currentCartId in session storage\r\n+        // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n+      })\r\n+      .addCase(createOrder.rejected, (state) => {\r\n+        state.isLoading = false;\r\n+        state.orderDetails = [];\r\n+        state.url = null;\r\n+        state.orderId = null;\r\n+      })\r\n+      .addCase(capturePayment.fulfilled, (state, action) => {\r\n+        state.orderDetails = action.payload;\r\n+      });\r\n+  },\r\n+});\r\n+\r\n+export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1741087226290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n   orderDetails: null,\r\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n+  orderLis\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n@@ -65,70 +66,4 @@\n   },\r\n });\r\n \r\n export default OrderSlice.reducer;\r\n-import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n-import axios from \"axios\";\r\n-\r\n-const initialState = {\r\n-  orderDetails: null,\r\n-  orderId: null,\r\n-  url: null,\r\n-  isLoading: false,\r\n-};\r\n-\r\n-export const createOrder = createAsyncThunk(\r\n-  \"/order/createOrder\",\r\n-  async (orderDetails) => {\r\n-    const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/payment-checkout\",\r\n-      orderDetails\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-export const capturePayment = createAsyncThunk(\r\n-  \"/order/capturePayment\",\r\n-  async (orderId) => {\r\n-    const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/capture\",\r\n-      {\r\n-        orderId, // Updating payment status\r\n-      }\r\n-    );\r\n-    return response.data;\r\n-  }\r\n-);\r\n-\r\n-const OrderSlice = createSlice({\r\n-  name: \"OrderSlice\",\r\n-  initialState,\r\n-  reducers: {},\r\n-  extraReducers: (builder) => {\r\n-    builder\r\n-      .addCase(createOrder.pending, (state) => {\r\n-        state.isLoading = true;\r\n-      })\r\n-      .addCase(createOrder.fulfilled, (state, action) => {\r\n-        state.isLoading = false;\r\n-        state.orderDetails = action.payload;\r\n-        state.url = action.payload.url;\r\n-        state.orderId = action.payload.orderId;\r\n-        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n-\r\n-        // Set currentOrderId and currentCartId in session storage\r\n-        // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n-      })\r\n-      .addCase(createOrder.rejected, (state) => {\r\n-        state.isLoading = false;\r\n-        state.orderDetails = [];\r\n-        state.url = null;\r\n-        state.orderId = null;\r\n-      })\r\n-      .addCase(capturePayment.fulfilled, (state, action) => {\r\n-        state.orderDetails = action.payload;\r\n-      });\r\n-  },\r\n-});\r\n-\r\n-export default OrderSlice.reducer;\r\n"
                },
                {
                    "date": 1741087234866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   orderDetails: null,\r\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n-  orderLis\r\n+  orderList =\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n"
                },
                {
                    "date": 1741087239903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n   orderDetails: null,\r\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n-  orderList =\r\n+  orderList :[],\r\n+  order\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n"
                },
                {
                    "date": 1741087253565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n   orderList :[],\r\n-  order\r\n+  orderData : \r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n"
                },
                {
                    "date": 1741087266300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n   orderList :[],\r\n-  orderData : \r\n+  orderData : null,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n@@ -32,8 +32,32 @@\n     );\r\n     return response.data;\r\n   }\r\n );\r\n+export const capturePayment = createAsyncThunk(\r\n+  \"/order/capturePayment\",\r\n+  async (orderId) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/capture\",\r\n+      {\r\n+        orderId, // Updating payment status\r\n+      }\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n+export const capturePayment = createAsyncThunk(\r\n+  \"/order/capturePayment\",\r\n+  async (orderId) => {\r\n+    const response = await axios.post(\r\n+      \"http://localhost:7000/api/shop/order/capture\",\r\n+      {\r\n+        orderId, // Updating payment status\r\n+      }\r\n+    );\r\n+    return response.data;\r\n+  }\r\n+);\r\n \r\n const OrderSlice = createSlice({\r\n   name: \"OrderSlice\",\r\n   initialState,\r\n"
                },
                {
                    "date": 1741087273891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     );\r\n     return response.data;\r\n   }\r\n );\r\n-export const capturePayment = createAsyncThunk(\r\n+export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture\",\r\n"
                },
                {
                    "date": 1741087282781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     return response.data;\r\n   }\r\n );\r\n export const getAllOrderByUser = createAsyncThunk(\r\n-  \"/order/capturePayment\",\r\n+  \"/order/list\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture\",\r\n       {\r\n@@ -44,9 +44,9 @@\n     );\r\n     return response.data;\r\n   }\r\n );\r\n-export const capturePayment = createAsyncThunk(\r\n+export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture\",\r\n"
                },
                {
                    "date": 1741087293918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     return response.data;\r\n   }\r\n );\r\n export const getAllOrderByUser = createAsyncThunk(\r\n-  \"/order/list\",\r\n+  \"/order/AllOrders\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       \"http://localhost:7000/api/shop/order/capture\",\r\n       {\r\n"
                },
                {
                    "date": 1741087300774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/capture\",\r\n+      \"http://localhost:7000/api/shop/order/list\",\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741087308764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/list\",\r\n+      \"http://localhost:7000/api/shop/order/list/:${}\",\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741087327363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/list/:${}\",\r\n+      `http://localhost:7000/api/shop/order/list/:${userId}\",\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741087337785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,11 +34,11 @@\n   }\r\n );\r\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n-  async (orderId) => {\r\n+  async (userId) => {\r\n     const response = await axios.post(\r\n-      `http://localhost:7000/api/shop/order/list/:${userId}\",\r\n+      `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741087346346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,11 +37,9 @@\n   \"/order/AllOrders\",\r\n   async (userId) => {\r\n     const response = await axios.post(\r\n       `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n-      {\r\n-        orderId, // Updating payment status\r\n-      }\r\n+   \r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n"
                },
                {
                    "date": 1741087406681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n );\r\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n   async (userId) => {\r\n-    const response = await axios.post(\r\n+    const response = await axios.get(\r\n       `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n    \r\n     );\r\n     return response.data;\r\n@@ -45,10 +45,10 @@\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n-    const response = await axios.post(\r\n-      \"http://localhost:7000/api/shop/order/capture\",\r\n+    const response = await axios.post(      `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n+\r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n     );\r\n"
                },
                {
                    "date": 1741087411774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n   orderDetails: null,\r\n   orderId: null,\r\n   url: null,\r\n   isLoading: false,\r\n-  orderList :[],\r\n-  orderData : null,\r\n+  orderList: [],\r\n+  orderData: null,\r\n };\r\n \r\n export const createOrder = createAsyncThunk(\r\n   \"/order/createOrder\",\r\n@@ -36,18 +36,18 @@\n export const getAllOrderByUser = createAsyncThunk(\r\n   \"/order/AllOrders\",\r\n   async (userId) => {\r\n     const response = await axios.get(\r\n-      `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n-   \r\n+      `http://localhost:7000/api/shop/order/list/:${userId}`\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n-    const response = await axios.post(      `http://localhost:7000/api/shop/order/list/:${userId}`,\r\n+    const response = await axios.post(\r\n+      `http://localhost:7000/api/shop/order/list/:${i}`,\r\n \r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n@@ -69,12 +69,17 @@\n         state.isLoading = false;\r\n         state.orderDetails = action.payload;\r\n         state.url = action.payload.url;\r\n         state.orderId = action.payload.orderId;\r\n-        sessionStorage.setItem(\"currentOrderId\", JSON.stringify(action.payload.orderId));\r\n-        sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n+        sessionStorage.setItem(\r\n+          \"currentOrderId\",\r\n+          JSON.stringify(action.payload.orderId)\r\n+        );\r\n+        sessionStorage.setItem(\r\n+          \"currentCartId\",\r\n+          JSON.stringify(action.payload.cartId)\r\n+        ); // Assuming cartId is part of the payload\r\n \r\n-\r\n         // Set currentOrderId and currentCartId in session storage\r\n         // sessionStorage.setItem(\"currentCartId\", JSON.stringify(action.payload.cartId)); // Assuming cartId is part of the payload\r\n       })\r\n       .addCase(createOrder.rejected, (state) => {\r\n"
                },
                {
                    "date": 1741087418932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/capturePayment\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n-      `http://localhost:7000/api/shop/order/list/:${i}`,\r\n+      `http://localhost:7000/api/shop/order/details/:${id}`,\r\n \r\n       {\r\n         orderId, // Updating payment status\r\n       }\r\n"
                },
                {
                    "date": 1741087429674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     return response.data;\r\n   }\r\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n-  \"/order/capturePayment\",\r\n+  \"/order/orderDetails\",\r\n   async (orderId) => {\r\n     const response = await axios.post(\r\n       `http://localhost:7000/api/shop/order/details/:${id}`,\r\n \r\n"
                },
                {
                    "date": 1741087444165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   }\r\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/orderDetails\",\r\n-  async (orderId) => {\r\n+  async (id) => {\r\n     const response = await axios.post(\r\n       `http://localhost:7000/api/shop/order/details/:${id}`,\r\n \r\n       {\r\n"
                },
                {
                    "date": 1741087449922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,8 @@\n   \"/order/orderDetails\",\r\n   async (id) => {\r\n     const response = await axios.post(\r\n       `http://localhost:7000/api/shop/order/details/:${id}`,\r\n-\r\n-      {\r\n-        orderId, // Updating payment status\r\n-      }\r\n     );\r\n     return response.data;\r\n   }\r\n );\r\n"
                },
                {
                    "date": 1741087460067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/orderDetails\",\r\n   async (id) => {\r\n-    const response = await axios.post(\r\n+    const response = await axios.posgett(\r\n       `http://localhost:7000/api/shop/order/details/:${id}`,\r\n     );\r\n     return response.data;\r\n   }\r\n"
                },
                {
                    "date": 1741087465330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n );\r\n export const getOrdersDetails = createAsyncThunk(\r\n   \"/order/orderDetails\",\r\n   async (id) => {\r\n-    const response = await axios.posget(\r\n+    const response = await axios.get(\r\n       `http://localhost:7000/api/shop/order/details/:${id}`,\r\n     );\r\n     return response.data;\r\n   }\r\n"
                }
            ],
            "date": 1740740508066,
            "name": "Commit-0",
            "content": "\r\n\r\n"
        }
    ]
}