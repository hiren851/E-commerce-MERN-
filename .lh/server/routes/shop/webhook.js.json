{
    "sourceFile": "server/routes/shop/webhook.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1740891360074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740891369657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\")(\"sk_test_...\"); // Your Stripe Secret Key\r\n-const Order = require(\"../../models/Order\"); // Import Order model\r\n+const Order = require(\"../../model\"); // Import Order model\r\n \r\n const router = express.Router();\r\n const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n \r\n"
                },
                {
                    "date": 1740891377761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"sk_test_...\"); // Your Stripe Secret Key\r\n-const Order = require(\"../../model\"); // Import Order model\r\n+const Stripe = require(\"stripe\")(\"\"); // Your Stripe Secret Key\r\n+const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n \r\n"
                },
                {
                    "date": 1740891415628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"\"); // Your Stripe Secret Key\r\n+const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Your Stripe Secret Key\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n"
                },
                {
                    "date": 1740891556666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Your Stripe Secret Key\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n-const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb \"; // Set in Stripe Dashboard\r\n \r\n // Webhook route\r\n router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n"
                },
                {
                    "date": 1740891562484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Your Stripe Secret Key\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb \"; // Set in Stripe Dashboard\r\n+const endpointSecret = \"\"; // Set in Stripe Dashboard\r\n \r\n // Webhook route\r\n router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n"
                },
                {
                    "date": 1740891572911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Your Stripe Secret Key\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n-const endpointSecret = \"\"; // Set in Stripe Dashboard\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb \"; \r\n \r\n // Webhook route\r\n router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n"
                },
                {
                    "date": 1740892189151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,34 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Your Stripe Secret Key\r\n-const Order = require(\"../../models/Order\"); // Import Order model\r\n+const Stripe = require(\"stripe\");\r\n \r\n+const stripe = Stripe(\"sk_test_YourSecretKey\"); // Replace with your secret key\r\n+const endpointSecret = \"whsec_YourWebhookSecret\"; // Replace with your webhook secret\r\n+\r\n const router = express.Router();\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb \"; \r\n \r\n-// Webhook route\r\n-router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n-  const sig = req.headers[\"stripe-signature\"];\r\n-  let event;\r\n+router.post(\r\n+  \"/stripe-webhook\",\r\n+  express.raw({ type: \"application/json\" }), // Use `raw` instead of `json`\r\n+  async (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n \r\n-  try {\r\n-    event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-  } catch (err) {\r\n-    console.error(\"Webhook signature verification failed:\", err.message);\r\n-    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-  }\r\n+    let event;\r\n+    try {\r\n+      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+    } catch (err) {\r\n+      console.error(\"⚠️ Webhook Signature Verification Failed:\", err.message);\r\n+      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n \r\n-  // Handle successful payments\r\n-  if (event.type === \"checkout.session.completed\") {\r\n-    const session = event.data.object;\r\n-    const paymentId = session.payment_intent; // Payment ID\r\n-    const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n-    const userId = session.metadata.userId; // User ID from metadata\r\n+    // ✅ Stripe Event Handling\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+      const session = event.data.object;\r\n+      console.log(\"✅ Payment successful:\", session.id);\r\n+      // Here, update your database with payment ID and payer ID\r\n+    }\r\n \r\n-    console.log(\"Payment Successful!\", { paymentId, payerId });\r\n-\r\n-    // Update order in the database\r\n-    await Order.findOneAndUpdate(\r\n-      { userId: userId },\r\n-      { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n-      { new: true }\r\n-    );\r\n-\r\n     res.json({ received: true });\r\n-  } else {\r\n-    res.status(400).json({ message: \"Unhandled event type\" });\r\n   }\r\n-});\r\n+);\r\n \r\n module.exports = router;\r\n"
                },
                {
                    "date": 1740892196485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n-const stripe = Stripe(\"sk_test_YourSecretKey\"); // Replace with your secret key\r\n+const stripe = Stripe(\"\"); // Replace with your secret key\r\n const endpointSecret = \"whsec_YourWebhookSecret\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n"
                },
                {
                    "date": 1740892212104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n-const stripe = Stripe(\"\"); // Replace with your secret key\r\n+const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n const endpointSecret = \"whsec_YourWebhookSecret\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n"
                },
                {
                    "date": 1740892218220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \"whsec_YourWebhookSecret\"; // Replace with your webhook secret\r\n+const endpointSecret = \"\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892368575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \"\"; // Replace with your webhook secret\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892503115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892518618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892531271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892536380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n+const endpointSecret =whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892623209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret =whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\r\n+const endpointSecret =\"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892742590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,33 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n-const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret =\"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n+const app = express();\r\n+const stripe = new Stripe(\"sk_test_YourSecretKey\"); // Replace with your actual secret key\r\n \r\n-const router = express.Router();\r\n+const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Your webhook secret\r\n \r\n-router.post(\r\n-  \"/stripe-webhook\",\r\n-  express.raw({ type: \"application/json\" }), // Use `raw` instead of `json`\r\n-  async (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n+// 🛑 Important: Apply `express.raw` **only** for the webhook route\r\n+app.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n+  const sig = req.headers[\"stripe-signature\"];\r\n \r\n-    let event;\r\n-    try {\r\n-      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-    } catch (err) {\r\n-      console.error(\"⚠️ Webhook Signature Verification Failed:\", err.message);\r\n-      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n+  let event;\r\n+  try {\r\n+    event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret.trim());\r\n+  } catch (err) {\r\n+    console.error(\"🚨 Webhook signature verification failed:\", err.message);\r\n+    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+  }\r\n \r\n-    // ✅ Stripe Event Handling\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-      const session = event.data.object;\r\n-      console.log(\"✅ Payment successful:\", session.id);\r\n-      // Here, update your database with payment ID and payer ID\r\n-    }\r\n+  console.log(\"🔗 Webhook Event Received:\", event.type);\r\n \r\n-    res.json({ received: true });\r\n+  if (event.type === \"checkout.session.completed\") {\r\n+    const session = event.data.object;\r\n+    console.log(\"✅ Payment Successful for:\", session.id);\r\n+    // Handle payment success (update order, send email, etc.)\r\n   }\r\n-);\r\n \r\n-module.exports = router;\r\n+  res.status(200).send(\"Webhook received\");\r\n+});\r\n+\r\n+// Start server\r\n+app.listen(7000, () => console.log(\"🚀 Server running on port 7000\"));\r\n"
                },
                {
                    "date": 1740892896347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,34 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n-const app = express();\r\n-const stripe = new Stripe(\"sk_test_YourSecretKey\"); // Replace with your actual secret key\r\n+const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n+const endpointSecret =\"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n \r\n-const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Your webhook secret\r\n+const router = express.Router();\r\n \r\n-// 🛑 Important: Apply `express.raw` **only** for the webhook route\r\n-app.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n-  const sig = req.headers[\"stripe-signature\"];\r\n+router.post(\r\n+  \"/stripe-webhook\",\r\n+  express.raw({ type: \"application/json\" }), // Use `raw` instead of `json`\r\n+  async (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n \r\n-  let event;\r\n-  try {\r\n-    event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret.trim());\r\n-  } catch (err) {\r\n-    console.error(\"🚨 Webhook signature verification failed:\", err.message);\r\n-    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-  }\r\n+    let event;\r\n+    try {\r\n+      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+    } catch (err) {\r\n+      console.error(\"⚠️ Webhook Signature Verification Failed:\", err.message);\r\n+      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n \r\n-  console.log(\"🔗 Webhook Event Received:\", event.type);\r\n+    // ✅ Stripe Event Handling\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+      const session = event.data.object;\r\n+      console.log(\"✅ Payment successful:\", session.id);\r\n+      // Here, update your database with payment ID and payer ID\r\n+    }\r\n \r\n-  if (event.type === \"checkout.session.completed\") {\r\n-    const session = event.data.object;\r\n-    console.log(\"✅ Payment Successful for:\", session.id);\r\n-    // Handle payment success (update order, send email, etc.)\r\n+    res.json({ received: true });\r\n   }\r\n+);\r\n \r\n-  res.status(200).send(\"Webhook received\");\r\n-});\r\n-\r\n-// Start server\r\n-app.listen(7000, () => console.log(\"🚀 Server running on port 7000\"));\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740892903064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret =\"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"\r\n+const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740892909474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n router.post(\r\n"
                },
                {
                    "date": 1740893008557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,42 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n+// ✅ Use `express.raw()` middleware for Stripe webhooks\r\n router.post(\r\n   \"/stripe-webhook\",\r\n-  express.raw({ type: \"application/json\" }), // Use `raw` instead of `json`\r\n+  express.raw({ type: \"application/json\" }), // Must be `raw`\r\n   async (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n \r\n     let event;\r\n     try {\r\n-      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret.trim());\r\n     } catch (err) {\r\n-      console.error(\"⚠️ Webhook Signature Verification Failed:\", err.message);\r\n+      console.error(\"🚨 Webhook Signature Verification Failed:\", err.message);\r\n       return res.status(400).send(`Webhook Error: ${err.message}`);\r\n     }\r\n \r\n-    // ✅ Stripe Event Handling\r\n+    console.log(\"🔗 Webhook Event Received:\", event.type);\r\n+\r\n+    // ✅ Handle payment success\r\n     if (event.type === \"checkout.session.completed\") {\r\n       const session = event.data.object;\r\n-      console.log(\"✅ Payment successful:\", session.id);\r\n-      // Here, update your database with payment ID and payer ID\r\n+      console.log(\"✅ Payment Successful:\", session.id);\r\n+\r\n+      // 🛠️ Save payment details (Payer ID, Payment ID) to your database\r\n+      const paymentId = session.payment_intent;\r\n+      const payerId = session.customer;\r\n+      \r\n+      console.log(\"💰 Payment ID:\", paymentId);\r\n+      console.log(\"🙍 Payer ID:\", payerId);\r\n+\r\n+      // Store payment details in your database here\r\n     }\r\n \r\n     res.json({ received: true });\r\n   }\r\n"
                },
                {
                    "date": 1740893050069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n // ✅ Use `express.raw()` middleware for Stripe webhooks\r\n"
                },
                {
                    "date": 1740893413203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const Stripe = require(\"stripe\");\r\n \r\n const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n+const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n \r\n const router = express.Router();\r\n \r\n // ✅ Use `express.raw()` middleware for Stripe webhooks\r\n"
                },
                {
                    "date": 1740925711920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,42 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\");\r\n+const Stripe = require(\"stripe\")(\"\"); // Your Stripe Secret Key\r\n+const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n-const stripe = Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your secret key\r\n-const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your webhook secret\r\n-\r\n const router = express.Router();\r\n+const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n \r\n-// ✅ Use `express.raw()` middleware for Stripe webhooks\r\n-router.post(\r\n-  \"/stripe-webhook\",\r\n-  express.raw({ type: \"application/json\" }), // Must be `raw`\r\n-  async (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n+// Webhook route\r\n+router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n+  const sig = req.headers[\"stripe-signature\"];\r\n+  let event;\r\n \r\n-    let event;\r\n-    try {\r\n-      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret.trim());\r\n-    } catch (err) {\r\n-      console.error(\"🚨 Webhook Signature Verification Failed:\", err.message);\r\n-      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n+  try {\r\n+    event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+  } catch (err) {\r\n+    console.error(\"Webhook signature verification failed:\", err.message);\r\n+    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+  }\r\n \r\n-    console.log(\"🔗 Webhook Event Received:\", event.type);\r\n+  // Handle successful payments\r\n+  if (event.type === \"checkout.session.completed\") {\r\n+    const session = event.data.object;\r\n+    const paymentId = session.payment_intent; // Payment ID\r\n+    const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n+    const userId = session.metadata.userId; // User ID from metadata\r\n \r\n-    // ✅ Handle payment success\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-      const session = event.data.object;\r\n-      console.log(\"✅ Payment Successful:\", session.id);\r\n+    console.log(\"Payment Successful!\", { paymentId, payerId });\r\n \r\n-      // 🛠️ Save payment details (Payer ID, Payment ID) to your database\r\n-      const paymentId = session.payment_intent;\r\n-      const payerId = session.customer;\r\n-      \r\n-      console.log(\"💰 Payment ID:\", paymentId);\r\n-      console.log(\"🙍 Payer ID:\", payerId);\r\n+    \r\n+    await Order.findOneAndUpdate(\r\n+      { userId: userId },\r\n+      { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n+      { new: true }\r\n+    );\r\n \r\n-      // Store payment details in your database here\r\n-    }\r\n-\r\n     res.json({ received: true });\r\n+  } else {\r\n+    res.status(400).json({ message: \"Unhandled event type\" });\r\n   }\r\n-);\r\n+});\r\n \r\n module.exports = router;\r\n"
                },
                {
                    "date": 1740925718434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   if (event.type === \"checkout.session.completed\") {\r\n     const session = event.data.object;\r\n     const paymentId = session.payment_intent; // Payment ID\r\n     const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n+    \r\n     const userId = session.metadata.userId; // User ID from metadata\r\n \r\n     console.log(\"Payment Successful!\", { paymentId, payerId });\r\n \r\n"
                },
                {
                    "date": 1740925727764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,10 @@\n   // Handle successful payments\r\n   if (event.type === \"checkout.session.completed\") {\r\n     const session = event.data.object;\r\n     const paymentId = session.payment_intent; // Payment ID\r\n-    const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n-    \r\n-    const userId = session.metadata.userId; // User ID from metadata\r\n+    const payerId = session.customer; \r\n+    const userId = session.metadata.userId; \r\n \r\n     console.log(\"Payment Successful!\", { paymentId, payerId });\r\n \r\n     \r\n"
                },
                {
                    "date": 1740925736575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,12 @@\n     console.error(\"Webhook signature verification failed:\", err.message);\r\n     return res.status(400).send(`Webhook Error: ${err.message}`);\r\n   }\r\n \r\n-  // Handle successful payments\r\n+  \r\n   if (event.type === \"checkout.session.completed\") {\r\n     const session = event.data.object;\r\n-    const paymentId = session.payment_intent; // Payment ID\r\n+    const paymentId = session.payment_intent; \r\n     const payerId = session.customer; \r\n     const userId = session.metadata.userId; \r\n \r\n     console.log(\"Payment Successful!\", { paymentId, payerId });\r\n"
                },
                {
                    "date": 1740925742777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const Stripe = require(\"stripe\")(\"\"); // Your Stripe Secret Key\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n-const endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n+const endpointSecret = \"your_webhook_secret\"; \r\n \r\n // Webhook route\r\n router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n"
                },
                {
                    "date": 1740925749934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"\"); // Your Stripe Secret Key\r\n+const Stripe = require(\"stripe\")(\"\"); \r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n \r\n const router = express.Router();\r\n const endpointSecret = \"your_webhook_secret\"; \r\n \r\n-// Webhook route\r\n+\r\n router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n   let event;\r\n \r\n"
                },
                {
                    "date": 1740925842145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,42 @@\n-const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"\"); \r\n-const Order = require(\"../../models/Order\"); // Import Order model\r\n+// const express = require(\"express\");\r\n+// const Stripe = require(\"stripe\")(\"\"); \r\n+// const Order = require(\"../../models/Order\"); \r\n \r\n-const router = express.Router();\r\n-const endpointSecret = \"your_webhook_secret\"; \r\n+// const router = express.Router();\r\n+// const endpointSecret = \"your_webhook_secret\"; \r\n \r\n \r\n-router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n-  const sig = req.headers[\"stripe-signature\"];\r\n-  let event;\r\n+// router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n+//   const sig = req.headers[\"stripe-signature\"];\r\n+//   let event;\r\n \r\n-  try {\r\n-    event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-  } catch (err) {\r\n-    console.error(\"Webhook signature verification failed:\", err.message);\r\n-    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-  }\r\n+//   try {\r\n+//     event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+//   } catch (err) {\r\n+//     console.error(\"Webhook signature verification failed:\", err.message);\r\n+//     return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+//   }\r\n \r\n   \r\n-  if (event.type === \"checkout.session.completed\") {\r\n-    const session = event.data.object;\r\n-    const paymentId = session.payment_intent; \r\n-    const payerId = session.customer; \r\n-    const userId = session.metadata.userId; \r\n+//   if (event.type === \"checkout.session.completed\") {\r\n+//     const session = event.data.object;\r\n+//     const paymentId = session.payment_intent; \r\n+//     const payerId = session.customer; \r\n+//     const userId = session.metadata.userId; \r\n \r\n-    console.log(\"Payment Successful!\", { paymentId, payerId });\r\n+//     console.log(\"Payment Successful!\", { paymentId, payerId });\r\n \r\n     \r\n-    await Order.findOneAndUpdate(\r\n-      { userId: userId },\r\n-      { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n-      { new: true }\r\n-    );\r\n+//     await Order.findOneAndUpdate(\r\n+//       { userId: userId },\r\n+//       { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n+//       { new: true }\r\n+//     );\r\n \r\n-    res.json({ received: true });\r\n-  } else {\r\n-    res.status(400).json({ message: \"Unhandled event type\" });\r\n-  }\r\n-});\r\n+//     res.json({ received: true });\r\n+//   } else {\r\n+//     res.status(400).json({ message: \"Unhandled event type\" });\r\n+//   }\r\n+// });\r\n \r\n-module.exports = router;\r\n+// module.exports = router;\r\n"
                },
                {
                    "date": 1740980297365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,51 @@\n // const express = require(\"express\");\r\n-// const Stripe = require(\"stripe\")(\"\"); \r\n-// const Order = require(\"../../models/Order\"); \r\n+const Stripe = require(\"stripe\");\r\n+const Order = require(\"../../models/Order\"); // Import your Order model\r\n \r\n-// const router = express.Router();\r\n-// const endpointSecret = \"your_webhook_secret\"; \r\n+const router = express.Router();\r\n+const stripe = new Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n \r\n+const endpointSecret = \"your_webhook_secret_here\"; // Get from Stripe dashboard\r\n \r\n-// router.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n-//   const sig = req.headers[\"stripe-signature\"];\r\n-//   let event;\r\n+router.post(\"/webhook\", express.json({ type: \"application/json\" }), async (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n \r\n-//   try {\r\n-//     event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-//   } catch (err) {\r\n-//     console.error(\"Webhook signature verification failed:\", err.message);\r\n-//     return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-//   }\r\n+    let event;\r\n+    try {\r\n+        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+    } catch (err) {\r\n+        console.error(\"⚠️ Webhook signature verification failed.\", err);\r\n+        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n \r\n-  \r\n-//   if (event.type === \"checkout.session.completed\") {\r\n-//     const session = event.data.object;\r\n-//     const paymentId = session.payment_intent; \r\n-//     const payerId = session.customer; \r\n-//     const userId = session.metadata.userId; \r\n+    // Handle the event type\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+        const session = event.data.object;\r\n+        const paymentId = session.id; // Payment ID (Stripe Session ID)\r\n+        const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n \r\n-//     console.log(\"Payment Successful!\", { paymentId, payerId });\r\n+        console.log(\"✅ Payment successful!\");\r\n+        console.log(\"Payment ID:\", paymentId);\r\n+        console.log(\"Payer ID:\", payerId);\r\n \r\n-    \r\n-//     await Order.findOneAndUpdate(\r\n-//       { userId: userId },\r\n-//       { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n-//       { new: true }\r\n-//     );\r\n+        // Update order in the database\r\n+        try {\r\n+            await Order.findOneAndUpdate(\r\n+                { userId: session.metadata.userId },\r\n+                {\r\n+                    paymentStatus: \"Paid\",\r\n+                    paymentId: paymentId,\r\n+                    payerId: payerId,\r\n+                    orderStatus: \"Confirmed\",\r\n+                }\r\n+            );\r\n+            console.log(\"✅ Order updated successfully in DB!\");\r\n+        } catch (error) {\r\n+            console.error(\"❌ Error updating order:\", error);\r\n+        }\r\n+    }\r\n \r\n-//     res.json({ received: true });\r\n-//   } else {\r\n-//     res.status(400).json({ message: \"Unhandled event type\" });\r\n-//   }\r\n-// });\r\n+    res.json({ received: true });\r\n+});\r\n \r\n-// module.exports = router;\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740980854718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,27 @@\n-// const express = require(\"express\");\r\n-const Stripe = require(\"stripe\");\r\n-const Order = require(\"../../models/Order\"); // Import your Order model\r\n-\r\n+const express = require(\"express\");\r\n const router = express.Router();\r\n-const stripe = new Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n+const stripe = require(\"stripe\")(\"sk_test_xxxx\"); // Use your secret key\r\n+const bodyParser = require(\"body-parser\");\r\n \r\n-const endpointSecret = \"your_webhook_secret_here\"; // Get from Stripe dashboard\r\n+const endpointSecret = \"whsec_xxxx\"; // Use the secret from `stripe listen`\r\n \r\n-router.post(\"/webhook\", express.json({ type: \"application/json\" }), async (req, res) => {\r\n+router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n \r\n     let event;\r\n     try {\r\n         event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n     } catch (err) {\r\n-        console.error(\"⚠️ Webhook signature verification failed.\", err);\r\n+        console.error(\"Webhook signature verification failed:\", err.message);\r\n         return res.status(400).send(`Webhook Error: ${err.message}`);\r\n     }\r\n \r\n-    // Handle the event type\r\n+    // Handle the event\r\n     if (event.type === \"checkout.session.completed\") {\r\n         const session = event.data.object;\r\n-        const paymentId = session.id; // Payment ID (Stripe Session ID)\r\n-        const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n-\r\n-        console.log(\"✅ Payment successful!\");\r\n-        console.log(\"Payment ID:\", paymentId);\r\n-        console.log(\"Payer ID:\", payerId);\r\n-\r\n-        // Update order in the database\r\n-        try {\r\n-            await Order.findOneAndUpdate(\r\n-                { userId: session.metadata.userId },\r\n-                {\r\n-                    paymentStatus: \"Paid\",\r\n-                    paymentId: paymentId,\r\n-                    payerId: payerId,\r\n-                    orderStatus: \"Confirmed\",\r\n-                }\r\n-            );\r\n-            console.log(\"✅ Order updated successfully in DB!\");\r\n-        } catch (error) {\r\n-            console.error(\"❌ Error updating order:\", error);\r\n-        }\r\n+        console.log(\"Payment was successful!\", session);\r\n+        // You can store session.payment_intent and session.customer in your DB\r\n     }\r\n \r\n     res.json({ received: true });\r\n });\r\n"
                },
                {
                    "date": 1740980862162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,13 @@\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_xxxx\"); // Use your secret key\r\n const bodyParser = require(\"body-parser\");\r\n \r\n+const endpointSecret = \"const express = require(\"express\");\r\n+const router = express.Router();\r\n+const stripe = require(\"stripe\")(\"sk_test_xxxx\"); // Use your secret key\r\n+const bodyParser = require(\"body-parser\");\r\n+\r\n const endpointSecret = \"whsec_xxxx\"; // Use the secret from `stripe listen`\r\n \r\n router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n@@ -26,4 +31,28 @@\n     res.json({ received: true });\r\n });\r\n \r\n module.exports = router;\r\n+\"; // Use the secret from `stripe listen`\r\n+\r\n+router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n+\r\n+    let event;\r\n+    try {\r\n+        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+    } catch (err) {\r\n+        console.error(\"Webhook signature verification failed:\", err.message);\r\n+        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n+\r\n+    // Handle the event\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+        const session = event.data.object;\r\n+        console.log(\"Payment was successful!\", session);\r\n+        // You can store session.payment_intent and session.customer in your DB\r\n+    }\r\n+\r\n+    res.json({ received: true });\r\n+});\r\n+\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740980886549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,11 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n-const stripe = require(\"stripe\")(\"sk_test_xxxx\"); // Use your secret key\r\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Use your secret key\r\n const bodyParser = require(\"body-parser\");\r\n \r\n-const endpointSecret = \"const express = require(\"express\");\r\n-const router = express.Router();\r\n-const stripe = require(\"stripe\")(\"sk_test_xxxx\"); // Use your secret key\r\n-const bodyParser = require(\"body-parser\");\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n \r\n-const endpointSecret = \"whsec_xxxx\"; // Use the secret from `stripe listen`\r\n-\r\n router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n \r\n     let event;\r\n@@ -31,28 +26,4 @@\n     res.json({ received: true });\r\n });\r\n \r\n module.exports = router;\r\n-\"; // Use the secret from `stripe listen`\r\n-\r\n-router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n-\r\n-    let event;\r\n-    try {\r\n-        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-    } catch (err) {\r\n-        console.error(\"Webhook signature verification failed:\", err.message);\r\n-        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n-\r\n-    // Handle the event\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-        const session = event.data.object;\r\n-        console.log(\"Payment was successful!\", session);\r\n-        // You can store session.payment_intent and session.customer in your DB\r\n-    }\r\n-\r\n-    res.json({ received: true });\r\n-});\r\n-\r\n-module.exports = router;\r\n"
                },
                {
                    "date": 1740981368010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,17 @@\n const express = require(\"express\");\r\n-const router = express.Router();\r\n-const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Use your secret key\r\n-const bodyParser = require(\"body-parser\");\r\n+const app = express();\r\n+const PORT = 7000;\r\n \r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n-\r\n-router.post(\"/webhook\", bodyParser.raw({ type: \"application/json\" }), (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n-\r\n-    let event;\r\n+// Stripe requires raw body\r\n+app.post(\"/api/shop/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n     try {\r\n-        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-    } catch (err) {\r\n-        console.error(\"Webhook signature verification failed:\", err.message);\r\n-        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+        const payload = req.body.toString(); // Convert raw buffer to string\r\n+        console.log(\"Webhook received:\", payload);\r\n+        res.status(200).send(\"Webhook received successfully\");\r\n+    } catch (error) {\r\n+        console.error(\"Webhook Error:\", error);\r\n+        res.status(400).send(\"Webhook Error\");\r\n     }\r\n-\r\n-    // Handle the event\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-        const session = event.data.object;\r\n-        console.log(\"Payment was successful!\", session);\r\n-        // You can store session.payment_intent and session.customer in your DB\r\n-    }\r\n-\r\n-    res.json({ received: true });\r\n });\r\n \r\n-module.exports = router;\r\n+app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n"
                },
                {
                    "date": 1740981403379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,36 @@\n const express = require(\"express\");\r\n-const app = express();\r\n-const PORT = 7000;\r\n+const router = express.Router();\r\n+const stripe = require(\"stripe\")(\r\n+  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n+); // Use your secret key\r\n+const bodyParser = require(\"body-parser\");\r\n \r\n-// Stripe requires raw body\r\n-app.post(\"/api/shop/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n+const endpointSecret =\r\n+  \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n+\r\n+router.post(\r\n+  \"/webhook\",\r\n+  bodyParser.raw({ type: \"application/json\" }),\r\n+  (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n+\r\n+    let event;\r\n     try {\r\n-        const payload = req.body.toString(); // Convert raw buffer to string\r\n-        console.log(\"Webhook received:\", payload);\r\n-        res.status(200).send(\"Webhook received successfully\");\r\n-    } catch (error) {\r\n-        console.error(\"Webhook Error:\", error);\r\n-        res.status(400).send(\"Webhook Error\");\r\n+      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+    } catch (err) {\r\n+      console.error(\"Webhook signature verification failed:\", err.message);\r\n+      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n     }\r\n-});\r\n \r\n-app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n+    // Handle the event\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+      const session = event.data.object;\r\n+      console.log(\"Payment was successful!\", session);\r\n+      // You can store session.payment_intent and session.customer in your DB\r\n+    }\r\n+\r\n+    res.json({ received: true });\r\n+  }\r\n+);\r\n+\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740981434721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n ); // Use your secret key\r\n const bodyParser = require(\"body-parser\");\r\n \r\n const endpointSecret =\r\n-  \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n+  \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n \r\n router.post(\r\n   \"/webhook\",\r\n   bodyParser.raw({ type: \"application/json\" }),\r\n"
                },
                {
                    "date": 1740981565476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n ); // Use your secret key\r\n const bodyParser = require(\"body-parser\");\r\n \r\n const endpointSecret =\r\n-  \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n+  \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n \r\n router.post(\r\n   \"/webhook\",\r\n   bodyParser.raw({ type: \"application/json\" }),\r\n"
                },
                {
                    "date": 1740981906426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\r\n   \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n-); // Use your secret key\r\n+); \r\n const bodyParser = require(\"body-parser\");\r\n \r\n const endpointSecret =\r\n-  \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n+  \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n \r\n router.post(\r\n   \"/webhook\",\r\n   bodyParser.raw({ type: \"application/json\" }),\r\n"
                },
                {
                    "date": 1740982178542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +0,0 @@\n-const express = require(\"express\");\r\n-const router = express.Router();\r\n-const stripe = require(\"stripe\")(\r\n-  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n-); \r\n-const bodyParser = require(\"body-parser\");\r\n-\r\n-const endpointSecret =\r\n-  \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Use the secret from `stripe listen`\r\n-\r\n-router.post(\r\n-  \"/webhook\",\r\n-  bodyParser.raw({ type: \"application/json\" }),\r\n-  (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n-\r\n-    let event;\r\n-    try {\r\n-      event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-    } catch (err) {\r\n-      console.error(\"Webhook signature verification failed:\", err.message);\r\n-      return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n-\r\n-    // Handle the event\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-      const session = event.data.object;\r\n-      console.log(\"Payment was successful!\", session);\r\n-      // You can store session.payment_intent and session.customer in your DB\r\n-    }\r\n-\r\n-    res.json({ received: true });\r\n-  }\r\n-);\r\n-\r\n-module.exports = router;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982190889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-\n+const express = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982198672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-const express = \n\\ No newline at end of file\n+const express = require('expres')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982213191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n-const express = require('expres')\n\\ No newline at end of file\n+const express = require('express');\r\n+\r\n+const stripe = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982224306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n const express = require('express');\r\n \r\n-const stripe = \n\\ No newline at end of file\n+const stripe = require(\"stripe\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982236814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n const express = require('express');\r\n \r\n-const stripe = require(\"stripe\")\n\\ No newline at end of file\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740982247171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,7 @@\n-const express = require('express');\r\n+const express = require(\"express\");\r\n \r\n\\ No newline at end of file\n-const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\")\n+const stripe = require(\"stripe\")(\r\n+  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n+);\r\n+\r\n+const app\r\n"
                },
                {
                    "date": 1740982252627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,6 @@\n const stripe = require(\"stripe\")(\r\n   \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n );\r\n \r\n-const app\n\\ No newline at end of file\n+const app = express();\r\n+\r\n"
                },
                {
                    "date": 1740989886210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n-const express = require(\"express\");\r\n+// const express = require(\"express\");\r\n \r\n-const stripe = require(\"stripe\")(\r\n-  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n-);\r\n+// const stripe = require(\"stripe\")(\r\n+//   \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n+// );\r\n \r\n-const app = express();\r\n+// const app = express();\r\n \r\n+\r\n+\r\n"
                },
                {
                    "date": 1740991392995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,28 @@\n // const express = require(\"express\");\r\n+const bodyParser = require(\"body-parser\");\r\n+const stripe = require(\"stripe\")(\"your_secret_key\");\r\n \r\n-// const stripe = require(\"stripe\")(\r\n-//   \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n-// );\r\n+const app = express();\r\n+app.use(bodyParser.json());\r\n \r\n-// const app = express();\r\n+app.post(\"/webhook\", async (req, res) => {\r\n+    const event = req.body;\r\n \r\n+    switch (event.type) {\r\n+        case \"payment_intent.succeeded\":\r\n+            const paymentIntent = event.data.object;\r\n+            console.log(\"PaymentIntent ID:\", paymentIntent.id);\r\n+            console.log(\"Customer ID:\", paymentIntent.customer); // Equivalent to payer_id\r\n \r\n+            // TODO: Store this data in your database or perform post-payment actions\r\n \r\n+            break;\r\n+\r\n+        default:\r\n+            console.log(`Unhandled event type ${event.type}`);\r\n+    }\r\n+\r\n+    res.sendStatus(200);\r\n+});\r\n+\r\n+app.listen(3000, () => console.log(\"Webhook running on port 3000\"));\r\n"
                },
                {
                    "date": 1740991944501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,33 @@\n-// const express = require(\"express\");\r\n-const bodyParser = require(\"body-parser\");\r\n-const stripe = require(\"stripe\")(\"your_secret_key\");\r\n+const express = require(\"express\");\r\n+const stripe = require(\"stripe\")(\"sk_test_1234567890abcdef\"); // Replace with your Stripe Secret Key\r\n \r\n-const app = express();\r\n-app.use(bodyParser.json());\r\n+const router = express.Router();\r\n+const WEBHOOK_SECRET = \"whsec_1234567890abcdef\"; // Replace with your Stripe Webhook Secret\r\n \r\n-app.post(\"/webhook\", async (req, res) => {\r\n-    const event = req.body;\r\n+// Stripe Webhook Route\r\n+router.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n+    let event;\r\n \r\n-    switch (event.type) {\r\n-        case \"payment_intent.succeeded\":\r\n-            const paymentIntent = event.data.object;\r\n-            console.log(\"PaymentIntent ID:\", paymentIntent.id);\r\n-            console.log(\"Customer ID:\", paymentIntent.customer); // Equivalent to payer_id\r\n+    try {\r\n+        event = stripe.webhooks.constructEvent(req.body, sig, WEBHOOK_SECRET);\r\n+    } catch (err) {\r\n+        console.error(\"❌ Webhook signature verification failed.\", err);\r\n+        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n \r\n-            // TODO: Store this data in your database or perform post-payment actions\r\n+    // Handle successful payment\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+        const session = event.data.object;\r\n \r\n-            break;\r\n+        console.log(\"✅ Payment Success\");\r\n+        console.log(\"💳 Payment ID:\", session.payment_intent);\r\n+        console.log(\"👤 Payer ID (Customer ID):\", session.customer);\r\n \r\n-        default:\r\n-            console.log(`Unhandled event type ${event.type}`);\r\n+        // TODO: Store payment details in the database\r\n     }\r\n \r\n-    res.sendStatus(200);\r\n+    res.json({ received: true });\r\n });\r\n \r\n-app.listen(3000, () => console.log(\"Webhook running on port 3000\"));\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740992023011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+const express = require(\"express\");\r\n+const stripe = require(\"stripe\")(\"sk_test_1234567890abcdef\"); // Replace with your Stripe Secret Key\r\n+\r\n+const router = express.Router();\r\n+const WEBHOOK_SECRET = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your Stripe Webhook Secret\r\n+\r\n+// Stripe Webhook Route\r\n+router.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n+    const sig = req.headers[\"stripe-signature\"];\r\n+    let event;\r\n+\r\n+    try {\r\n+        event = stripe.webhooks.constructEvent(req.body, sig, WEBHOOK_SECRET);\r\n+    } catch (err) {\r\n+        console.error(\"❌ Webhook signature verification failed.\", err);\r\n+        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n+    }\r\n+\r\n+    // Handle successful payment\r\n+    if (event.type === \"checkout.session.completed\") {\r\n+        const session = event.data.object;\r\n+\r\n+        console.log(\"✅ Payment Success\");\r\n+        console.log(\"💳 Payment ID:\", session.payment_intent);\r\n+        console.log(\"👤 Payer ID (Customer ID):\", session.customer);\r\n+\r\n+        // TODO: Store payment details in the database\r\n+    }\r\n+\r\n+    res.json({ received: true });\r\n+});\r\n+\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1740992170744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n-const stripe = require(\"stripe\")(\"sk_test_1234567890abcdef\"); // Replace with your Stripe Secret Key\r\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"); // Replace with your Stripe Secret Key\r\n \r\n const router = express.Router();\r\n-const WEBHOOK_SECRET = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your Stripe Webhook Secret\r\n+const WEBHOOK_SECRET = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\"; // Replace with your Stripe Webhook Secret\r\n \r\n // Stripe Webhook Route\r\n router.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n@@ -30,37 +30,4 @@\n     res.json({ received: true });\r\n });\r\n \r\n module.exports = router;\r\n-const express = require(\"express\");\r\n-const stripe = require(\"stripe\")(\"sk_test_1234567890abcdef\"); // Replace with your Stripe Secret Key\r\n-\r\n-const router = express.Router();\r\n-const WEBHOOK_SECRET = \"whsec_1234567890abcdef\"; // Replace with your Stripe Webhook Secret\r\n-\r\n-// Stripe Webhook Route\r\n-router.post(\"/webhook\", express.raw({ type: \"application/json\" }), (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n-    let event;\r\n-\r\n-    try {\r\n-        event = stripe.webhooks.constructEvent(req.body, sig, WEBHOOK_SECRET);\r\n-    } catch (err) {\r\n-        console.error(\"❌ Webhook signature verification failed.\", err);\r\n-        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n-\r\n-    // Handle successful payment\r\n-    if (event.type === \"checkout.session.completed\") {\r\n-        const session = event.data.object;\r\n-\r\n-        console.log(\"✅ Payment Success\");\r\n-        console.log(\"💳 Payment ID:\", session.payment_intent);\r\n-        console.log(\"👤 Payer ID (Customer ID):\", session.customer);\r\n-\r\n-        // TODO: Store payment details in the database\r\n-    }\r\n-\r\n-    res.json({ received: true });\r\n-});\r\n-\r\n-module.exports = router;\r\n"
                }
            ],
            "date": 1740891360074,
            "name": "Commit-0",
            "content": "const express = require(\"express\");\r\nconst Stripe = require(\"stripe\")(\"sk_test_...\"); // Your Stripe Secret Key\r\nconst Order = require(\"../../models/Order\"); // Import Order model\r\n\r\nconst router = express.Router();\r\nconst endpointSecret = \"your_webhook_secret\"; // Set in Stripe Dashboard\r\n\r\n// Webhook route\r\nrouter.post(\"/stripe-webhook\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n  const sig = req.headers[\"stripe-signature\"];\r\n  let event;\r\n\r\n  try {\r\n    event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n  } catch (err) {\r\n    console.error(\"Webhook signature verification failed:\", err.message);\r\n    return res.status(400).send(`Webhook Error: ${err.message}`);\r\n  }\r\n\r\n  // Handle successful payments\r\n  if (event.type === \"checkout.session.completed\") {\r\n    const session = event.data.object;\r\n    const paymentId = session.payment_intent; // Payment ID\r\n    const payerId = session.customer; // Payer ID (Stripe Customer ID)\r\n    const userId = session.metadata.userId; // User ID from metadata\r\n\r\n    console.log(\"Payment Successful!\", { paymentId, payerId });\r\n\r\n    // Update order in the database\r\n    await Order.findOneAndUpdate(\r\n      { userId: userId },\r\n      { paymentId, payerId, paymentStatus: \"paid\", orderStatus: \"confirmed\" },\r\n      { new: true }\r\n    );\r\n\r\n    res.json({ received: true });\r\n  } else {\r\n    res.status(400).json({ message: \"Unhandled event type\" });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}