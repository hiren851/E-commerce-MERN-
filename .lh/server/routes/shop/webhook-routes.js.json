{
    "sourceFile": "server/routes/shop/webhook-routes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1740994095489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740994783179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,40 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n-const Order = require(\"../../models/Order\"); // Ensure your Order model is correct\r\n+const Stripe = require(\"stripe\");\r\n+const bodyParser = require(\"body-parser\");\r\n \r\n const router = express.Router();\r\n+const stripe = new Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n \r\n-router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n-    let event;\r\n+// Use the secret from the webhook registration\r\n+const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n+\r\n+router.post(\"/stripe\", bodyParser.raw({ type: \"application/json\" }), async (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n-    const endpointSecret = \"your_webhook_secret\"; // Replace with your actual secret from Stripe dashboard\r\n \r\n+    let event;\r\n     try {\r\n-        event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n+        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n     } catch (err) {\r\n-        console.error(\"Webhook signature verification failed:\", err.message);\r\n+        console.error(\"Webhook signature verification failed.\", err.message);\r\n         return res.status(400).send(`Webhook Error: ${err.message}`);\r\n     }\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n         const session = event.data.object;\r\n-        console.log(\"Session completed:\", session);\r\n+        \r\n+        console.log(\"✅ Payment Successful! Session Data:\", session);\r\n \r\n-        const order = await Order.findOne({ userId: session.metadata.userId });\r\n-        if (order) {\r\n-            order.paymentStatus = \"Paid\";\r\n-            order.paymentId = session.payment_intent;\r\n-            order.payerId = session.customer;\r\n-            order.orderStatus = \"Processing\";\r\n-            await order.save();\r\n-            console.log(\"Order updated with payment details\");\r\n-        }\r\n+        const paymentId = session.payment_intent; // Stripe Payment ID\r\n+        const payerId = session.customer; // Customer ID\r\n+\r\n+        console.log(`Payment ID: ${paymentId}, Payer ID: ${payerId}`);\r\n+\r\n+        // TODO: Update order in database with payment details (implement DB logic)\r\n+        \r\n+        return res.status(200).json({ success: true, message: \"Payment processed!\" });\r\n     }\r\n \r\n-    res.json({ received: true });\r\n+    res.status(400).send(\"Unhandled event type\");\r\n });\r\n \r\n module.exports = router;\r\n"
                },
                {
                    "date": 1740995159700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,14 @@\n const express = require(\"express\");\r\n-const Stripe = require(\"stripe\");\r\n-const bodyParser = require(\"body-parser\");\r\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n+const Order = require(\"../../models/Order\");\r\n \r\n const router = express.Router();\r\n-const stripe = new Stripe(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n \r\n-// Use the secret from the webhook registration\r\n-const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n-\r\n-router.post(\"/stripe\", bodyParser.raw({ type: \"application/json\" }), async (req, res) => {\r\n+// Middleware to handle raw body for Stripe signature verification\r\n+router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n     const sig = req.headers[\"stripe-signature\"];\r\n+    const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\"; // Use your actual secret\r\n \r\n     let event;\r\n     try {\r\n         event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n@@ -18,20 +16,24 @@\n         console.error(\"Webhook signature verification failed.\", err.message);\r\n         return res.status(400).send(`Webhook Error: ${err.message}`);\r\n     }\r\n \r\n+    // Handle successful checkout session\r\n     if (event.type === \"checkout.session.completed\") {\r\n         const session = event.data.object;\r\n-        \r\n-        console.log(\"✅ Payment Successful! Session Data:\", session);\r\n \r\n-        const paymentId = session.payment_intent; // Stripe Payment ID\r\n-        const payerId = session.customer; // Customer ID\r\n+        const paymentId = session.payment_intent;\r\n+        const payerId = session.customer;\r\n \r\n-        console.log(`Payment ID: ${paymentId}, Payer ID: ${payerId}`);\r\n+        console.log(`✅ Payment ID: ${paymentId}, Payer ID: ${payerId}`);\r\n \r\n-        // TODO: Update order in database with payment details (implement DB logic)\r\n-        \r\n+        // Update order in database\r\n+        await Order.findOneAndUpdate(\r\n+            { userId: session.metadata.userId },\r\n+            { paymentId, payerId, paymentStatus: \"Paid\", orderStatus: \"Confirmed\" },\r\n+            { new: true }\r\n+        );\r\n+\r\n         return res.status(200).json({ success: true, message: \"Payment processed!\" });\r\n     }\r\n \r\n     res.status(400).send(\"Unhandled event type\");\r\n"
                },
                {
                    "date": 1740995662862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,25 @@\n const express = require(\"express\");\r\n-const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n-const Order = require(\"../../models/Order\");\r\n-\r\n const router = express.Router();\r\n+const stripe = require(\"stripe\")(\"your_stripe_secret_key\");\r\n \r\n-// Middleware to handle raw body for Stripe signature verification\r\n-router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n-    const sig = req.headers[\"stripe-signature\"];\r\n-    const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\"; // Use your actual secret\r\n+router.post(\"/stripe\", async (req, res) => {\r\n+  const sig = req.headers[\"stripe-signature\"];\r\n+  const endpointSecret = \"your_webhook_secret\";\r\n \r\n-    let event;\r\n-    try {\r\n-        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n-    } catch (err) {\r\n-        console.error(\"Webhook signature verification failed.\", err.message);\r\n-        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n-    }\r\n+  try {\r\n+    // Verify webhook signature using raw body\r\n+    const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n-    // Handle successful checkout session\r\n     if (event.type === \"checkout.session.completed\") {\r\n-        const session = event.data.object;\r\n-\r\n-        const paymentId = session.payment_intent;\r\n-        const payerId = session.customer;\r\n-\r\n-        console.log(`✅ Payment ID: ${paymentId}, Payer ID: ${payerId}`);\r\n-\r\n-        // Update order in database\r\n-        await Order.findOneAndUpdate(\r\n-            { userId: session.metadata.userId },\r\n-            { paymentId, payerId, paymentStatus: \"Paid\", orderStatus: \"Confirmed\" },\r\n-            { new: true }\r\n-        );\r\n-\r\n-        return res.status(200).json({ success: true, message: \"Payment processed!\" });\r\n+      console.log(\"💰 Payment successful!\", event.data.object);\r\n+      // Handle successful payment logic here\r\n     }\r\n \r\n-    res.status(400).send(\"Unhandled event type\");\r\n+    res.status(200).send(\"Webhook received!\");\r\n+  } catch (err) {\r\n+    console.error(\"❌ Webhook Error:\", err.message);\r\n+    res.status(400).send(`Webhook Error: ${err.message}`);\r\n+  }\r\n });\r\n \r\n module.exports = router;\r\n"
                },
                {
                    "date": 1740995673130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n-const stripe = require(\"stripe\")(\"your_stripe_secret_key\");\r\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n \r\n router.post(\"/stripe\", async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n   const endpointSecret = \"your_webhook_secret\";\r\n"
                },
                {
                    "date": 1740995681818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n-const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n+const stripe = require(\"stripe\")(\r\n+  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n+);\r\n \r\n router.post(\"/stripe\", async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n-  const endpointSecret = \"your_webhook_secret\";\r\n+  const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n   try {\r\n     // Verify webhook signature using raw body\r\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n"
                },
                {
                    "date": 1740995876313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,15 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n-const stripe = require(\"stripe\")(\r\n-  \"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\"\r\n-);\r\n+const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n \r\n+const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n+\r\n router.post(\"/stripe\", async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n-  const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n   try {\r\n-    // Verify webhook signature using raw body\r\n+    // ✅ Construct the event using the raw request body\r\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n       console.log(\"💰 Payment successful!\", event.data.object);\r\n"
                },
                {
                    "date": 1740996239228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,17 +7,27 @@\n router.post(\"/stripe\", async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n \r\n   try {\r\n-    // ✅ Construct the event using the raw request body\r\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n-      console.log(\"💰 Payment successful!\", event.data.object);\r\n-      // Handle successful payment logic here\r\n+      const session = event.data.object;\r\n+      \r\n+      // Extract Payment & Payer Info\r\n+      const payerId = session.customer || \"Guest\"; // Stripe Customer ID (cus_xxxxxx)\r\n+      const payerEmail = session.customer_email || \"No email provided\";\r\n+      const paymentIntentId = session.payment_intent || \"No payment intent\";\r\n+      \r\n+      console.log(\"💰 Payment Successful!\");\r\n+      console.log(\"Payer ID:\", payerId);\r\n+      console.log(\"Payer Email:\", payerEmail);\r\n+      console.log(\"Payment Intent ID:\", paymentIntentId);\r\n+\r\n+      // You may want to store this in your database\r\n     }\r\n \r\n-    res.status(200).send(\"Webhook received!\");\r\n+    res.status(200).json({ received: true });\r\n   } catch (err) {\r\n     console.error(\"❌ Webhook Error:\", err.message);\r\n     res.status(400).send(`Webhook Error: ${err.message}`);\r\n   }\r\n"
                },
                {
                    "date": 1741007007748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,45 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n+const Payment = require(\"../../models/Payment\"); // Import Payment model\r\n \r\n const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n-router.post(\"/stripe\", async (req, res) => {\r\n+router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n \r\n   try {\r\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n       const session = event.data.object;\r\n-      \r\n+\r\n       // Extract Payment & Payer Info\r\n       const payerId = session.customer || \"Guest\"; // Stripe Customer ID (cus_xxxxxx)\r\n       const payerEmail = session.customer_email || \"No email provided\";\r\n       const paymentIntentId = session.payment_intent || \"No payment intent\";\r\n-      \r\n+      const amount = session.amount_total / 100; // Convert cents to dollars\r\n+      const currency = session.currency;\r\n+      const status = \"paid\"; // Successful Payment Status\r\n+\r\n       console.log(\"💰 Payment Successful!\");\r\n       console.log(\"Payer ID:\", payerId);\r\n       console.log(\"Payer Email:\", payerEmail);\r\n       console.log(\"Payment Intent ID:\", paymentIntentId);\r\n \r\n-      // You may want to store this in your database\r\n+      // Store payment details in MongoDB\r\n+      const paymentData = new Payment({\r\n+        payerId,\r\n+        payerEmail,\r\n+        paymentIntentId,\r\n+        amount,\r\n+        currency,\r\n+        status,\r\n+      });\r\n+\r\n+      await paymentData.save();\r\n+      console.log(\"✅ Payment saved to database:\", paymentData);\r\n     }\r\n \r\n     res.status(200).json({ received: true });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1741007020936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n-const Payment = require(\"../../models/Payment\"); // Import Payment model\r\n+const Payment = require(\"../../models/\"); // Import Payment model\r\n \r\n const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n"
                },
                {
                    "date": 1741007027568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n-const Payment = require(\"../../models/\"); // Import Payment model\r\n+const Order = require(\"../../models/Order\"); // Import Payment model\r\n \r\n const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n"
                },
                {
                    "date": 1741007114122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n       console.log(\"Payer Email:\", payerEmail);\r\n       console.log(\"Payment Intent ID:\", paymentIntentId);\r\n \r\n       // Store payment details in MongoDB\r\n-      const paymentData = new Payment({\r\n+      const paymentData = new Order({\r\n         payerId,\r\n         payerEmail,\r\n         paymentIntentId,\r\n         amount,\r\n"
                },
                {
                    "date": 1741007120768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n const Order = require(\"../../models/Order\"); // Import Payment model\r\n+const { createOrder } = require(\"../../controllers/shop/order-controller\");\r\n \r\n const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n"
                },
                {
                    "date": 1741066918321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n-const Order = require(\"../../models/Order\"); // Import Payment model\r\n-const { createOrder } = require(\"../../controllers/shop/order-controller\");\r\n-\r\n+const Order = require(\"../../models/Order\"); // Import Order model\r\n const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n@@ -15,32 +13,46 @@\n     if (event.type === \"checkout.session.completed\") {\r\n       const session = event.data.object;\r\n \r\n       // Extract Payment & Payer Info\r\n-      const payerId = session.customer || \"Guest\"; // Stripe Customer ID (cus_xxxxxx)\r\n+      const payerId = session.customer || \"Guest\"; // Stripe Customer ID\r\n       const payerEmail = session.customer_email || \"No email provided\";\r\n       const paymentIntentId = session.payment_intent || \"No payment intent\";\r\n       const amount = session.amount_total / 100; // Convert cents to dollars\r\n       const currency = session.currency;\r\n-      const status = \"paid\"; // Successful Payment Status\r\n+      const status = \"completed\"; // Mark as completed after successful payment\r\n+      const orderId = session.metadata?.orderId; // Get orderId from metadata\r\n \r\n       console.log(\"💰 Payment Successful!\");\r\n+      console.log(\"Order ID:\", orderId);\r\n       console.log(\"Payer ID:\", payerId);\r\n-      console.log(\"Payer Email:\", payerEmail);\r\n       console.log(\"Payment Intent ID:\", paymentIntentId);\r\n \r\n-      // Store payment details in MongoDB\r\n-      const paymentData = new Order({\r\n-        payerId,\r\n-        payerEmail,\r\n-        paymentIntentId,\r\n-        amount,\r\n-        currency,\r\n-        status,\r\n-      });\r\n+      if (!orderId) {\r\n+        console.error(\"❌ Order ID missing in session metadata!\");\r\n+        return res.status(400).json({ error: \"Order ID not found in metadata.\" });\r\n+      }\r\n \r\n-      await paymentData.save();\r\n-      console.log(\"✅ Payment saved to database:\", paymentData);\r\n+      // Update the corresponding order in the database\r\n+      const updatedOrder = await Order.findOneAndUpdate(\r\n+        { _id: orderId },\r\n+        {\r\n+          $set: {\r\n+            payerId,\r\n+            paymentIntentId,\r\n+            paymentStatus: \"completed\",\r\n+            orderStatus: \"confirmed\",\r\n+          },\r\n+        },\r\n+        { new: true }\r\n+      );\r\n+\r\n+      if (!updatedOrder) {\r\n+        console.error(\"❌ Order not found in database!\");\r\n+        return res.status(404).json({ error: \"Order not found\" });\r\n+      }\r\n+\r\n+      console.log(\"✅ Order updated successfully:\", updatedOrder);\r\n     }\r\n \r\n     res.status(200).json({ received: true });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1741066937743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     }\r\n \r\n     res.status(200).json({ received: true });\r\n   } catch (err) {\r\n-    console.error(\"❌ Webhook Error:\", err.message);\r\n+    console.error(\"Webhook Error:\", err.message);\r\n     res.status(400).send(`Webhook Error: ${err.message}`);\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1741066944181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,13 +46,13 @@\n         { new: true }\r\n       );\r\n \r\n       if (!updatedOrder) {\r\n-        console.error(\"❌ Order not found in database!\");\r\n+        console.error(\" Order not found in database!\");\r\n         return res.status(404).json({ error: \"Order not found\" });\r\n       }\r\n \r\n-      console.log(\"✅ Order updated successfully:\", updatedOrder);\r\n+      console.log(\"Order updated successfully:\", updatedOrder);\r\n     }\r\n \r\n     res.status(200).json({ received: true });\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1741066950603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n       console.log(\"Payer ID:\", payerId);\r\n       console.log(\"Payment Intent ID:\", paymentIntentId);\r\n \r\n       if (!orderId) {\r\n-        console.error(\"❌ Order ID missing in session metadata!\");\r\n+        console.error(\"Order ID missing in session metadata!\");\r\n         return res.status(400).json({ error: \"Order ID not found in metadata.\" });\r\n       }\r\n \r\n       // Update the corresponding order in the database\r\n@@ -46,9 +46,9 @@\n         { new: true }\r\n       );\r\n \r\n       if (!updatedOrder) {\r\n-        console.error(\" Order not found in database!\");\r\n+        console.error(\"Order not found in database!\");\r\n         return res.status(404).json({ error: \"Order not found\" });\r\n       }\r\n \r\n       console.log(\"Order updated successfully:\", updatedOrder);\r\n"
                },
                {
                    "date": 1741067532985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n-const endpointSecret = \"whsec_vsOBvKGE9NA02hjdDy6kP6hfIKWouRZ6\";\r\n+const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n \r\n@@ -21,9 +21,9 @@\n       const currency = session.currency;\r\n       const status = \"completed\"; // Mark as completed after successful payment\r\n       const orderId = session.metadata?.orderId; // Get orderId from metadata\r\n \r\n-      console.log(\"💰 Payment Successful!\");\r\n+      console.log(\"Payment Successful!\");\r\n       console.log(\"Order ID:\", orderId);\r\n       console.log(\"Payer ID:\", payerId);\r\n       console.log(\"Payment Intent ID:\", paymentIntentId);\r\n \r\n"
                },
                {
                    "date": 1741068077975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const express = require(\"express\");\r\n const router = express.Router();\r\n const stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\n const Order = require(\"../../models/Order\"); // Import Order model\r\n-const endpointSecret = \" whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\";\r\n+const endpointSecret = \"whsec_ee3a2844a7e0b439172d80797b16e93d251a099716a05fc093d40fed0ad109cb\";\r\n \r\n router.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n   const sig = req.headers[\"stripe-signature\"];\r\n \r\n@@ -11,8 +11,9 @@\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n       const session = event.data.object;\r\n+      const orderId = session.metadata?.orderId; \r\n \r\n       // Extract Payment & Payer Info\r\n       const payerId = session.customer || \"Guest\"; // Stripe Customer ID\r\n       const payerEmail = session.customer_email || \"No email provided\";\r\n"
                },
                {
                    "date": 1741068097969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n \r\n     if (event.type === \"checkout.session.completed\") {\r\n       const session = event.data.object;\r\n-      const orderId = session.metadata?.orderId; \r\n+      // const orderId = session.metadata?.orderId; \r\n \r\n       // Extract Payment & Payer Info\r\n       const payerId = session.customer || \"Guest\"; // Stripe Customer ID\r\n       const payerEmail = session.customer_email || \"No email provided\";\r\n"
                }
            ],
            "date": 1740994095489,
            "name": "Commit-0",
            "content": "const express = require(\"express\");\r\nconst Stripe = require(\"stripe\")(\"sk_test_51QxPWqA8ZItKkZV0Gb0GVJNN2RhnVTSbrnPQCp5X4PF7M7Ui4oy3Hth9LMvfUNiuUaifhkFpCBeqY31eRQFknJzz00SpyiT0wR\");\r\nconst Order = require(\"../../models/Order\"); // Ensure your Order model is correct\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/stripe\", express.raw({ type: \"application/json\" }), async (req, res) => {\r\n    let event;\r\n    const sig = req.headers[\"stripe-signature\"];\r\n    const endpointSecret = \"your_webhook_secret\"; // Replace with your actual secret from Stripe dashboard\r\n\r\n    try {\r\n        event = Stripe.webhooks.constructEvent(req.body, sig, endpointSecret);\r\n    } catch (err) {\r\n        console.error(\"Webhook signature verification failed:\", err.message);\r\n        return res.status(400).send(`Webhook Error: ${err.message}`);\r\n    }\r\n\r\n    if (event.type === \"checkout.session.completed\") {\r\n        const session = event.data.object;\r\n        console.log(\"Session completed:\", session);\r\n\r\n        const order = await Order.findOne({ userId: session.metadata.userId });\r\n        if (order) {\r\n            order.paymentStatus = \"Paid\";\r\n            order.paymentId = session.payment_intent;\r\n            order.payerId = session.customer;\r\n            order.orderStatus = \"Processing\";\r\n            await order.save();\r\n            console.log(\"Order updated with payment details\");\r\n        }\r\n    }\r\n\r\n    res.json({ received: true });\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}